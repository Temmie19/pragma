<root>
	<collection type="library" shared="1">
		<name>steamworks</name>
		<collection type="library" shared="1">
			<name>workshop</name>
			<desc>TODO</desc>
			<group>
				<function type="function">
					<name>get_item</name>
					<desc>
						Retrieves information for the specified item in the requested language and calls the ''callback'' once the data has been retrieved.\n
						The ''callback'' has the following signature:\n
						{{template_overload|{{template_type|void}}|callback|{{template_param|steamworks.Result}} result,{{template_param|steamworks.workshop.Item}} item}}
					</desc>
					<lua></lua>
					<overload>
						<parameters>
							<arg type="steamworks.workshop.PublishedFileId">fileId</arg>
							<arg type="function">callback</arg>
							<arg type="steamworks.workshop.Language" default="steamworks.workshop.LANG_ENGLISH">language</arg>
						</parameters>
					</overload>
				</function>
				<function type="function">
					<name>create_item</name>
					<desc>
						Creates a new workshop item and calls the ''callback'' once the item has been created successfully.\n
						The ''callback'' has the following signature:\n
						{{template_overload|{{template_type|void}}|callback|{{template_param|steamworks.Result}} result,{{template_param|steamworks.workshop.Item}} item}}
					</desc>
					<lua></lua>
					<overload>
						<parameters>
							<arg type="function">callback</arg>
						</parameters>
					</overload>
				</function>
				<function type="function">
					<name>add_item_dependency</name>
					<desc>
						Adds ''dependencyFileId'' as a dependent item for ''fileId'' and calls the specified ''callback'' when complete (or if failed).\n
						The ''callback'' has the following signature:\n
						{{template_overload|{{template_type|void}}|callback|{{template_param|steamworks.Result}} result}}
					</desc>
					<lua></lua>
					<overload>
						<parameters>
							<arg type="steamworks.workshop.PublishedFileId">fileId</arg>
							<arg type="steamworks.workshop.PublishedFileId">dependencyFileId</arg>
							<arg type="function">callback</arg>
						</parameters>
					</overload>
				</function>
				<function type="function">
					<name>add_item_app_dependency</name>
					<desc>
						Adds the specified app as a dependence for ''fileId'' and calls the specified ''callback'' when complete (or if failed).\n
						The ''callback'' has the following signature:\n
						{{template_overload|{{template_type|void}}|callback|{{template_param|steamworks.Result}} result}}
					</desc>
					<lua></lua>
					<overload>
						<parameters>
							<arg type="steamworks.workshop.PublishedFileId">fileId</arg>
							<arg type="steamworks.workshop.AppId">appId</arg>
							<arg type="function">callback</arg>
						</parameters>
					</overload>
				</function>
				<function type="function">
					<name>remove_item_dependency</name>
					<desc>
						Removes ''dependencyFileId'' as a dependent item for ''fileId'' and calls the specified ''callback'' when complete (or if failed).\n
						The ''callback'' has the following signature:\n
						{{template_overload|{{template_type|void}}|callback|{{template_param|steamworks.Result}} result}}
					</desc>
					<lua></lua>
					<overload>
						<parameters>
							<arg type="steamworks.workshop.PublishedFileId">fileId</arg>
							<arg type="steamworks.workshop.PublishedFileId">dependencyFileId</arg>
							<arg type="function">callback</arg>
						</parameters>
					</overload>
				</function>
				<function type="function">
					<name>remove_item_app_dependency</name>
					<desc>
						Removes the specified app as a dependence for ''fileId'' and calls the specified ''callback'' when complete (or if failed).\n
						The ''callback'' has the following signature:\n
						{{template_overload|{{template_type|void}}|callback|{{template_param|steamworks.Result}} result}}
					</desc>
					<lua></lua>
					<overload>
						<parameters>
							<arg type="steamworks.workshop.PublishedFileId">fileId</arg>
							<arg type="steamworks.workshop.AppId">appId</arg>
							<arg type="function">callback</arg>
						</parameters>
					</overload>
				</function>
				<function type="function">
					<name>subscribe_item</name>
					<desc>
						Subscribes the client to the specified item.\n
						The ''callback'' has the following signature:\n
						{{template_overload|{{template_type|void}}|callback|{{template_param|steamworks.Result}} result}}
					</desc>
					<lua></lua>
					<overload>
						<parameters>
							<arg type="steamworks.workshop.PublishedFileId">fileId</arg>
							<arg type="function">callback</arg>
						</parameters>
					</overload>
				</function>
				<function type="function">
					<name>unsubscribe_item</name>
					<desc>
						Unsubscribes the client to the specified item.\n
						The ''callback'' has the following signature:\n
						{{template_overload|{{template_type|void}}|callback|{{template_param|steamworks.Result}} result}}
					</desc>
					<lua></lua>
					<overload>
						<parameters>
							<arg type="steamworks.workshop.PublishedFileId">fileId</arg>
							<arg type="function">callback</arg>
						</parameters>
					</overload>
				</function>
				<function type="function">
					<name>get_subscribed_items</name>
					<desc>Returns a list of all currently subscribed items.</desc>
					<lua></lua>
					<overload>
						<returnValues>
							<arg type="table" subType="steamworks.workshop.PublishedFileId">subscribedItems</arg>
						</returnValues>
					</overload>
				</function>
			</group>
			<function type="function">
				<name>register_callback</name>
				<desc>Registers a callback function which will be called whenver the event is triggered.</desc>
				<lua></lua>
				<overload>
					<parameters>
						<arg type="steamworks.workshop.Callback">callbackType</arg>
						<arg type="function">callback</arg>
					</parameters>
					<returnValues>
						<arg type="util.Callback">callbackObject</arg>
					</returnValues>
				</overload>
			</function>
			<enum_set>
				<name>Visibility</name>
				<enum value="0">VISIBILITY_PUBLIC</enum>
				<enum value="1">VISIBILITY_FRIENDS_ONLY</enum>
				<enum value="2">VISIBILITY_PRIVATE</enum>
			</enum_set>
			<enum_set>
				<name>UpdateStatus</name>
				<enum value="0">UPDATE_STATUS_INVALID</enum>
				<enum value="1">UPDATE_STATUS_PREPARING_CONFIG</enum>
				<enum value="2">UPDATE_STATUS_PREPARING_CONTENT</enum>
				<enum value="3">UPDATE_STATUS_UPLOADING_CONTENT</enum>
				<enum value="4">UPDATE_STATUS_UPLOADING_PREVIEW_FILE</enum>
				<enum value="5">UPDATE_STATUS_COMMITTING_CHANGES</enum>
			</enum_set>
			<enum_set>
				<name>Language</name>
				<enum value="0">LANG_ARABIC</enum>
				<enum value="1">LANG_BULGARIAN</enum>
				<enum value="2">LANG_CHINESE_SIMPLIFIED</enum>
				<enum value="3">LANG_CHINESE_TRADITIONAL</enum>
				<enum value="4">LANG_CZECH</enum>
				<enum value="5">LANG_DANISH</enum>
				<enum value="6">LANG_DUTCH</enum>
				<enum value="7">LANG_ENGLISH</enum>
				<enum value="8">LANG_FINNISH</enum>
				<enum value="9">LANG_FRENCH</enum>
				<enum value="10">LANG_GERMAN</enum>
				<enum value="11">LANG_GREEK</enum>
				<enum value="12">LANG_HUNGARIAN</enum>
				<enum value="13">LANG_ITALIAN</enum>
				<enum value="14">LANG_JAPANESE</enum>
				<enum value="15">LANG_KOREAN</enum>
				<enum value="16">LANG_NORWEGIAN</enum>
				<enum value="17">LANG_POLISH</enum>
				<enum value="18">LANG_PORTUGUESE</enum>
				<enum value="19">LANG_BRAZILIAN</enum>
				<enum value="20">LANG_ROMANIAN</enum>
				<enum value="21">LANG_RUSSIAN</enum>
				<enum value="22">LANG_SPANISH</enum>
				<enum value="23">LANG_SWEDISH</enum>
				<enum value="24">LANG_THAI</enum>
				<enum value="25">LANG_TURKISH</enum>
				<enum value="26">LANG_UKRAINIAN</enum>
			</enum_set>
			<enum_set type="flags">
				<name>CategoryFlags</name>
				<enum value="0">CATEGORY_FLAG_NONE</enum>
				<enum value="1" type="bit">CATEGORY_FLAG_BIT_GAME_MODE</enum>
				<enum value="2" type="bit">CATEGORY_FLAG_BIT_MAP</enum>
				<enum value="4" type="bit">CATEGORY_FLAG_BIT_WEAPON</enum>
				<enum value="8" type="bit">CATEGORY_FLAG_BIT_VEHICLE</enum>
				<enum value="16" type="bit">CATEGORY_FLAG_BIT_AI</enum>
				<enum value="32" type="bit">CATEGORY_FLAG_BIT_UTILITY</enum>
				<enum value="64" type="bit">CATEGORY_FLAG_BIT_MODEL</enum>
				<enum value="128" type="bit">CATEGORY_FLAG_BIT_CONTENT</enum>
				<enum value="256" type="bit">CATEGORY_FLAG_BIT_EFFECT</enum>
				<enum value="512" type="bit">CATEGORY_FLAG_BIT_MATERIAL</enum>
				<enum value="1024" type="bit">CATEGORY_FLAG_BIT_AUDIO</enum>
				<enum value="2048" type="bit">CATEGORY_FLAG_BIT_MISC</enum>
				<enum value="4096" type="bit">CATEGORY_FLAG_BIT_MODULE</enum>
			</enum_set>
			<enum_set>
				<name>Callback</name>
				<enum value="0">CALLBACK_ON_ITEM_INSTALLED</enum>
			</enum_set>
		</collection>
	</collection>
</root>
