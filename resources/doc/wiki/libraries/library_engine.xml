<root>
	<collection type="library">
		<name>engine</name>
		<desc>TODO</desc>
		<group>
			<function type="function" client="1">
				<name>bind_key</name>
				<desc>
					Binds the specified key to either a list of console commands, or a callback function.\n
					It's recommended avoid using a callback, as they won't get saved in the settings.
				</desc>
				<lua></lua>
				<overload>
					<parameters>
						<arg type="string">key</arg>
						<arg type="string">cmd</arg>
					</parameters>
				</overload>
				<overload>
					<parameters>
						<arg type="string">key</arg>
						<arg type="function">callback</arg>
					</parameters>
				</overload>
			</function>
			<function type="function" client="1">
				<name>unbind_key</name>
				<desc>Unmaps whatever is bound to the specified key.</desc>
				<lua></lua>
				<overload>
					<parameters>
						<arg type="string">key</arg>
					</parameters>
				</overload>
			</function>
		</group>
		<function type="function" client="1">
			<name>create_font</name>
			<desc>Loads the specified font with the given size. On success a new FontInfo-object is returned, otherwise nil will be returned.</desc>
			<lua></lua>
			<overload>
				<parameters>
					<arg type="string">identifier</arg>
					<arg type="string">fontName</arg>
					<arg type="int">size</arg>
				</parameters>
				<returnValues>
					<arg type="engine.FontInfo">fontInfo</arg>
				</returnValues>
			</overload>
		</function>
		<function type="function" client="1">
			<name>get_font</name>
			<desc>Returns the FontInfo-object for the specified font if it exists, otherwise nil.</desc>
			<lua></lua>
			<overload>
				<parameters>
					<arg type="string">identifier</arg>
				</parameters>
				<returnValues>
					<arg type="engine.FontInfo">fontInfo</arg>
				</returnValues>
			</overload>
		</function>
		<function type="function" client="1">
			<name>get_text_size</name>
			<desc>Returns the width and height of the specified text for the given font in pixels.</desc>
			<lua></lua>
			<overload>
				<parameters>
					<arg type="string">text</arg>
					<arg type="string">fontName</arg>
				</parameters>
				<returnValues>
					<arg type="math.Vector2i">textSize</arg>
				</returnValues>
			</overload>
			<overload>
				<parameters>
					<arg type="string">text</arg>
					<arg type="engine.FontInfo">fontInfo</arg>
				</parameters>
				<returnValues>
					<arg type="math.Vector2i">textSize</arg>
				</returnValues>
			</overload>
		</function>
		<function type="function" client="1">
			<name>get_tick_count</name>
			<desc>Returns the number of ticks that have passed since the game has started.</desc>
			<lua></lua>
			<overload>
				<returnValues>
					<arg type="int">tickCount</arg>
				</returnValues>
			</overload>
		</function>
		<function type="function" client="1">
			<name>load_library</name>
			<desc>Loads the specified library. On success, true is returned, otherwise the return value is an error-string.</desc>
			<lua></lua>
			<overload>
				<parameters>
					<arg type="string">library</arg>
				</parameters>
				<returnValues>
					<arg type="bool">library</arg>
				</returnValues>
			</overload>
		</function>
		<function type="function">
			<name>get_tick_count</name>
			<desc>Returns the number of ticks that have passed since the game has started.</desc>
			<lua></lua>
			<overload>
				<returnValues>
					<arg type="int">tickCount</arg>
				</returnValues>
			</overload>
		</function>
		<group>
			<function type="function">
				<name>create_font</name>
				<desc>Loads the specified font with the given size. On success a new FontInfo-object is returned, otherwise nil will be returned.</desc>
				<lua></lua>
				<overload>
					<parameters>
						<arg type="string">identifier</arg>
						<arg type="string">fontFileName</arg>
						<arg type="int">size</arg>
					</parameters>
					<returnValues>
						<arg type="engine.FontInfo">font</arg>
					</returnValues>
				</overload>
			</function>
			<function type="function">
				<name>get_font</name>
				<desc>Returns the FontInfo-object for the specified font if it exists, otherwise nil.</desc>
				<lua></lua>
				<overload>
					<parameters>
						<arg type="string">identifier</arg>
					</parameters>
					<returnValues>
						<arg type="engine.FontInfo">font</arg>
					</returnValues>
				</overload>
			</function>
		</group>
	</collection>
</root>
