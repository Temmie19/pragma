<root>
	<collection type="library">
		<name>nav</name>
		<desc>TODO</desc>
		<function type="function">
			<name>generate</name>
			<desc>
				If no second argument is specified, this will generate a nav-mesh for the current map/world geometry.\n
				If the second argument is a entity, a nav-mesh will be generated for the geometry of that entity.\n
				If the second and third argument are specified, a nav-mesh will be generated for the specified mesh. The optional ''areas''-parameter should be a table containing another table with the following members:\n
				* {{template_type|int}} area\n<!-- TODO: Is this the PolyType? -->
				* {{template_type|table}} vertices: Table of vectors.\n
				\n
				On success the nav-mesh will be returned, otherwise ''false'' will be returned, as well as an error message as second return value.
			</desc>
			<lua></lua>
			<overload>
				<parameters>
					<arg type="nav.Config">config</arg>
				</parameters>
				<returnValues>
					<arg type="nav.Mesh">navMesh</arg>
				</returnValues>
			</overload>
			<overload>
				<parameters>
					<arg type="nav.Config">config</arg>
					<arg type="ents.Entity">entity</arg>
				</parameters>
				<returnValues>
					<arg type="nav.Mesh">navMesh</arg>
				</returnValues>
			</overload>
			<overload>
				<parameters>
					<arg type="nav.Config">config</arg>
					<arg type="table" subType="math.Vector">vertices</arg>
					<arg type="table" subType="int">triangles</arg>
					<arg type="table" subType="table" default="{}">areas</arg>
				</parameters>
				<returnValues>
					<arg type="nav.Mesh">navMesh</arg>
				</returnValues>
			</overload>
		</function>
		<function type="function">
			<name>load</name>
			<desc>Loads the nav-mesh from the specified file and returns it, or ''false'' if there was an error.</desc>
			<lua></lua>
			<overload>
				<parameters>
					<arg type="string">navFileName</arg>
				</parameters>
				<returnValues>
					<arg type="nav.Mesh">navMesh</arg>
				</returnValues>
			</overload>
		</function>
		<enum_set type="flags">
			<name>PolyType</name>
			<enum value="0">POLY_TYPE_BIT_NONE</enum>
			<enum value="1" type="bit">POLY_TYPE_BIT_WALK</enum>
			<enum value="2" type="bit">POLY_TYPE_BIT_SWIM</enum>
			<enum value="4" type="bit">POLY_TYPE_BIT_DOOR</enum>
			<enum value="8" type="bit">POLY_TYPE_BIT_JUMP</enum>
			<enum value="16" type="bit">POLY_TYPE_BIT_DISABLED</enum>
			<enum value="math.MAX_UINT16" type="bit">POLY_TYPE_ALL</enum>
		</enum_set>
	</collection>
</root>
