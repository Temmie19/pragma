<root>
	<collection type="library" client="1" gui="1">
		<name>input</name>
		<desc>TODO</desc>
		<group>
			<function type="function" gui="1">
				<name>get_mouse_button_state</name>
				<desc>Returns the current state for the specified mouse button.</desc>
				<lua></lua>
				<overload>
					<parameters>
						<arg type="input.MouseButton">mouseButton</arg>
					</parameters>
					<returnValues>
						<arg type="input.State">state</arg>
					</returnValues>
				</overload>
			</function>
			<function type="function" gui="1">
				<name>get_key_state</name>
				<desc>Returns the current state for the specified key.</desc>
				<lua></lua>
				<overload>
					<parameters>
						<arg type="input.Key">key</arg>
					</parameters>
					<returnValues>
						<arg type="input.State">state</arg>
					</returnValues>
				</overload>
			</function>
		</group>
		<function type="function" gui="1">
			<name>add_callback</name>
			<desc>Adds a callback function for the given identifier.</desc>
			<lua></lua>
			<overload>
				<parameters>
					<arg type="string">identifier</arg>
					<arg type="function">callback</arg>
				</parameters>
				<returnValues>
					<arg type="util.Callback">callbackObject</arg>
				</returnValues>
			</overload>
		</function>
		<group>
			<function type="function" gui="1">
				<name>get_cursor_pos</name>
				<desc>Returns the current cursor position.</desc>
				<lua></lua>
				<overload>
					<returnValues>
						<arg type="math.Vector2">cursorPos</arg>
					</returnValues>
				</overload>
			</function>
			<function type="function" gui="1">
				<name>set_cursor_pos</name>
				<desc>Changes the current cursor position.</desc>
				<lua></lua>
				<overload>
					<parameters>
						<arg type="math.Vector2">cursorPos</arg>
					</parameters>
				</overload>
			</function>
		</group>
		<group>
			<function type="function" gui="1">
				<name>get_controller_count</name>
				<desc>Returns the number of connected controllers.</desc>
				<lua></lua>
				<overload>
					<returnValues>
						<arg type="int">controllerCount</arg>
					</returnValues>
				</overload>
			</function>
			<function type="function" gui="1">
				<name>get_controller_name</name>
				<desc>Returns the name of the specified controller.</desc>
				<lua></lua>
				<overload>
					<returnValues>
						<arg type="string">controllerName</arg>
					</returnValues>
				</overload>
			</function>
			<function type="function" gui="1">
				<name>get_controller_axes</name>
				<desc>Returns the state for all axes of the controller.</desc>
				<lua></lua>
				<overload>
					<returnValues>
						<arg type="table" subType="float">controllerAxesStates</arg>
					</returnValues>
				</overload>
			</function>
			<function type="function" gui="1">
				<name>get_controller_buttons</name>
				<desc>Returns the state for all buttons of the controller.</desc>
				<lua></lua>
				<overload>
					<returnValues>
						<arg type="input.State">controllerButtonStates</arg>
					</returnValues>
				</overload>
			</function>
		</group>
		<group>
			<function type="function" gui="1">
				<name>key_to_string</name>
				<desc></desc>
				<lua></lua>
				<overload>
					<parameters>
						<arg type="input.Key">key</arg>
					</parameters>
					<returnValues>
						<arg type="string">key</arg>
					</returnValues>
				</overload>
			</function>
			<function type="function" gui="1">
				<name>key_to_text</name>
				<desc></desc>
				<lua></lua>
				<overload>
					<parameters>
						<arg type="input.Key">key</arg>
					</parameters>
					<returnValues>
						<arg type="string">key</arg>
					</returnValues>
				</overload>
			</function>
			<function type="function" gui="1">
				<name>string_to_key</name>
				<desc></desc>
				<lua></lua>
				<overload>
					<parameters>
						<arg type="string">key</arg>
					</parameters>
					<returnValues>
						<arg type="input.Key">key</arg>
					</returnValues>
				</overload>
			</function>
		</group>
		<function type="function" gui="1">
			<name>get_mapped_keys</name>
			<desc></desc>
			<lua></lua>
			<overload>
				<parameters>
					<arg type="string">cvarName</arg>
					<arg type="int" default="math.MAX_UINT32">maxKeys</arg>
				</parameters>
				<returnValues>
					<arg type="table" subType="input.Key">key</arg>
				</returnValues>
			</overload>
		</function>
		<enum_set type="flags" gui="1">
			<name>Action</name>
			<enum value="1" type="bit">ACTION_MOVEFORWARD</enum>
			<enum value="2" type="bit">ACTION_MOVEBACKWARD</enum>
			<enum value="4" type="bit">ACTION_MOVELEFT</enum>
			<enum value="8" type="bit">ACTION_MOVERIGHT</enum>
			<enum value="16" type="bit">ACTION_SPRINT</enum>
			<enum value="32" type="bit">ACTION_WALK</enum>
			<enum value="64" type="bit">ACTION_JUMP</enum>
			<enum value="128" type="bit">ACTION_CROUCH</enum>
			<enum value="256" type="bit">ACTION_ATTACK</enum>
			<enum value="512" type="bit">ACTION_ATTACK2</enum>
			<enum value="1024" type="bit">ACTION_ATTACK3</enum>
			<enum value="2084" type="bit">ACTION_ATTACK4</enum>
			<enum value="4096" type="bit">ACTION_RELOAD</enum>
			<enum value="8192" type="bit">ACTION_USE</enum>
		</enum_set>
		<enum_set client="1">
			<name>State</name>
			<enum value="0">STATE_RELEASE</enum>
			<enum value="1">STATE_PRESS</enum>
			<enum value="2">STATE_REPEAT</enum>
		</enum_set>
		<enum_set client="1">
			<name>MouseButton</name>
			<enum value="0">MOUSE_BUTTON_1</enum>
			<enum value="1">MOUSE_BUTTON_2</enum>
			<enum value="2">MOUSE_BUTTON_3</enum>
			<enum value="3">MOUSE_BUTTON_4</enum>
			<enum value="4">MOUSE_BUTTON_5</enum>
			<enum value="5">MOUSE_BUTTON_6</enum>
			<enum value="6">MOUSE_BUTTON_7</enum>
			<enum value="7">MOUSE_BUTTON_8</enum>
			<enum value="0">MOUSE_BUTTON_LEFT</enum>
			<enum value="1">MOUSE_BUTTON_RIGHT</enum>
			<enum value="2">MOUSE_BUTTON_MIDDLE</enum>
		</enum_set>
		<enum_set type="flags" client="1">
			<name>Modifier</name>
			<enum value="0">MOD_NONE</enum>
			<enum value="1" type="bit">MOD_SHIFT</enum>
			<enum value="2" type="bit">MOD_CONTROL</enum>
			<enum value="4" type="bit">MOD_ALT</enum>
			<enum value="8" type="bit">MOD_SUPER</enum>
		</enum_set>
		<enum_set client="1">
			<name>Key</name>
			<enum value="-1">KEY_UNKNOWN</enum>
			<enum value="32">KEY_SPACE</enum>
			<enum value="39">KEY_APOSTROPHE</enum>
			<enum value="44">KEY_COMMA</enum>
			<enum value="45">KEY_MINUS</enum>
			<enum value="46">KEY_PERIOD</enum>
			<enum value="47">KEY_SLASH</enum>
			<enum value="48">KEY_0</enum>
			<enum value="49">KEY_1</enum>
			<enum value="50">KEY_2</enum>
			<enum value="51">KEY_3</enum>
			<enum value="52">KEY_4</enum>
			<enum value="53">KEY_5</enum>
			<enum value="54">KEY_6</enum>
			<enum value="55">KEY_7</enum>
			<enum value="56">KEY_8</enum>
			<enum value="57">KEY_9</enum>
			<enum value="59">KEY_SEMICOLON</enum>
			<enum value="61">KEY_EQUAL</enum>
			<enum value="65">KEY_A</enum>
			<enum value="66">KEY_B</enum>
			<enum value="67">KEY_C</enum>
			<enum value="68">KEY_D</enum>
			<enum value="69">KEY_E</enum>
			<enum value="70">KEY_F</enum>
			<enum value="71">KEY_G</enum>
			<enum value="72">KEY_H</enum>
			<enum value="73">KEY_I</enum>
			<enum value="74">KEY_J</enum>
			<enum value="75">KEY_K</enum>
			<enum value="76">KEY_L</enum>
			<enum value="77">KEY_M</enum>
			<enum value="78">KEY_N</enum>
			<enum value="79">KEY_O</enum>
			<enum value="80">KEY_P</enum>
			<enum value="81">KEY_Q</enum>
			<enum value="82">KEY_R</enum>
			<enum value="83">KEY_S</enum>
			<enum value="84">KEY_T</enum>
			<enum value="85">KEY_U</enum>
			<enum value="86">KEY_V</enum>
			<enum value="87">KEY_W</enum>
			<enum value="88">KEY_X</enum>
			<enum value="89">KEY_Y</enum>
			<enum value="90">KEY_Z</enum>
			<enum value="91">KEY_LEFT_BRACKET</enum>
			<enum value="92">KEY_BACKSLASH</enum>
			<enum value="93">KEY_RIGHT_BRACKET</enum>
			<enum value="96">KEY_GRAVE_ACCENT</enum>
			<enum value="161">KEY_WORLD_1</enum>
			<enum value="162">KEY_WORLD_2</enum>
			<enum value="256">KEY_ESCAPE</enum>
			<enum value="257">KEY_ENTER</enum>
			<enum value="258">KEY_TAB</enum>
			<enum value="259">KEY_BACKSPACE</enum>
			<enum value="260">KEY_INSERT</enum>
			<enum value="261">KEY_DELETE</enum>
			<enum value="262">KEY_RIGHT</enum>
			<enum value="263">KEY_LEFT</enum>
			<enum value="264">KEY_DOWN</enum>
			<enum value="265">KEY_UP</enum>
			<enum value="266">KEY_PAGE_UP</enum>
			<enum value="267">KEY_PAGE_DOWN</enum>
			<enum value="268">KEY_HOME</enum>
			<enum value="269">KEY_END</enum>
			<enum value="280">KEY_CAPS_LOCK</enum>
			<enum value="281">KEY_SCROLL_LOCK</enum>
			<enum value="282">KEY_NUM_LOCK</enum>
			<enum value="283">KEY_PRINT_SCREEN</enum>
			<enum value="284">KEY_PAUSE</enum>
			<enum value="290">KEY_F1</enum>
			<enum value="291">KEY_F2</enum>
			<enum value="292">KEY_F3</enum>
			<enum value="293">KEY_F4</enum>
			<enum value="294">KEY_F5</enum>
			<enum value="295">KEY_F6</enum>
			<enum value="296">KEY_F7</enum>
			<enum value="297">KEY_F8</enum>
			<enum value="298">KEY_F9</enum>
			<enum value="299">KEY_F10</enum>
			<enum value="300">KEY_F11</enum>
			<enum value="301">KEY_F12</enum>
			<enum value="302">KEY_F13</enum>
			<enum value="303">KEY_F14</enum>
			<enum value="304">KEY_F15</enum>
			<enum value="305">KEY_F16</enum>
			<enum value="306">KEY_F17</enum>
			<enum value="307">KEY_F18</enum>
			<enum value="308">KEY_F19</enum>
			<enum value="309">KEY_F20</enum>
			<enum value="310">KEY_F21</enum>
			<enum value="311">KEY_F22</enum>
			<enum value="312">KEY_F23</enum>
			<enum value="313">KEY_F24</enum>
			<enum value="314">KEY_F25</enum>
			<enum value="320">KEY_KP_0</enum>
			<enum value="321">KEY_KP_1</enum>
			<enum value="322">KEY_KP_2</enum>
			<enum value="323">KEY_KP_3</enum>
			<enum value="324">KEY_KP_4</enum>
			<enum value="325">KEY_KP_5</enum>
			<enum value="326">KEY_KP_6</enum>
			<enum value="327">KEY_KP_7</enum>
			<enum value="328">KEY_KP_8</enum>
			<enum value="329">KEY_KP_9</enum>
			<enum value="330">KEY_KP_DECIMAL</enum>
			<enum value="331">KEY_KP_DIVIDE</enum>
			<enum value="332">KEY_KP_MULTIPLY</enum>
			<enum value="333">KEY_KP_SUBTRACT</enum>
			<enum value="334">KEY_KP_ADD</enum>
			<enum value="335">KEY_KP_ENTER</enum>
			<enum value="336">KEY_KP_EQUAL</enum>
			<enum value="340">KEY_LEFT_SHIFT</enum>
			<enum value="341">KEY_LEFT_CONTROL</enum>
			<enum value="342">KEY_LEFT_ALT</enum>
			<enum value="343">KEY_LEFT_SUPER</enum>
			<enum value="344">KEY_RIGHT_SHIFT</enum>
			<enum value="345">KEY_RIGHT_CONTROL</enum>
			<enum value="346">KEY_RIGHT_ALT</enum>
			<enum value="347">KEY_RIGHT_SUPER</enum>
			<enum value="348">KEY_MENU</enum>
			<enum value="357">KEY_SCRL_UP</enum>
			<enum value="358">KEY_SCRL_DOWN</enum>
			<enum value="358">KEY_SCRL_DOWN</enum>
			<enum value="348">KEY_MOUSE_BUTTON_1</enum>
			<enum value="349">KEY_MOUSE_BUTTON_2</enum>
			<enum value="350">KEY_MOUSE_BUTTON_3</enum>
			<enum value="351">KEY_MOUSE_BUTTON_4</enum>
			<enum value="352">KEY_MOUSE_BUTTON_5</enum>
			<enum value="353">KEY_MOUSE_BUTTON_6</enum>
			<enum value="354">KEY_MOUSE_BUTTON_7</enum>
			<enum value="355">KEY_MOUSE_BUTTON_8</enum>
			<enum value="356">KEY_MOUSE_BUTTON_9</enum>
			<enum value="1358">CONTROLLER_0_KEY_START</enum>
			<enum value="1483">CONTROLLER_0_AXIS_START</enum>
			<enum value="1608">CONTROLLER_1_KEY_START</enum>
			<enum value="1733">CONTROLLER_1_AXIS_START</enum>
			<enum value="1858">CONTROLLER_2_KEY_START</enum>
			<enum value="1983">CONTROLLER_2_AXIS_START</enum>
			<enum value="2108">CONTROLLER_3_KEY_START</enum>
			<enum value="2233">CONTROLLER_3_AXIS_START</enum>
			<enum value="2358">CONTROLLER_4_KEY_START</enum>
			<enum value="2483">CONTROLLER_4_AXIS_START</enum>
			<enum value="2608">CONTROLLER_5_KEY_START</enum>
			<enum value="2733">CONTROLLER_5_AXIS_START</enum>
			<enum value="2858">CONTROLLER_6_KEY_START</enum>
			<enum value="2983">CONTROLLER_6_AXIS_START</enum>
			<enum value="3108">CONTROLLER_7_KEY_START</enum>
			<enum value="3233">CONTROLLER_7_AXIS_START</enum>
			<enum value="3358">CONTROLLER_8_KEY_START</enum>
			<enum value="3483">CONTROLLER_8_AXIS_START</enum>
			<enum value="3608">CONTROLLER_9_KEY_START</enum>
			<enum value="3733">CONTROLLER_9_AXIS_START</enum>
		</enum_set>
	</collection>
</root>
