<root>
	<collection type="library">
		<name>shader</name>
		<collection type="class" client="1" base="1" gui="1">
			<name>BaseTexturedLit3D</name>
			<derivedFrom>
				<name>shader.BaseGraphicsModule</name>
				<derivedFrom>shader.BaseModule</derivedFrom>
			</derivedFrom>
			<derivedFrom>
				<name>TexturedLit3D</name>
				<derivedFrom>
					<name>shader.ShaderEntity</name>
					<derivedFrom>
						<name>shader.SceneLit3D</name>
						<derivedFrom>
							<name>shader.Scene3D</name>
							<derivedFrom>
								<name>shader.Graphics</name>
								<derivedFrom>shader.Shader</derivedFrom>
							</derivedFrom>
						</derivedFrom>
					</derivedFrom>
				</derivedFrom>
			</derivedFrom>
			<desc>TODO</desc>
			<function type="method">
				<name>constructor</name>
				<desc>Base constructor for BaseTexturedLit3D.</desc>
				<lua></lua>
				<overload></overload>
			</function>
			<function type="hook">
				<name>BindMaterialParameters</name>
				<desc>Use this hook to bind material parameters.</desc>
				<lua></lua>
				<overload>
					<parameters>
						<arg type="game.Material">material</arg>
					</parameters>
					<returnValues>
						<arg type="bool">success</arg>
					</returnValues>
				</overload>
			</function>
			<function type="hook">
				<name>InitializeGfxPipelineVertexAttributes</name>
				<desc>Use this hook to initialize vertex attributes.</desc>
				<lua></lua>
				<overload>
					<parameters>
						<arg type="shader.BasePipelineCreateInfo">createInfo</arg>
						<arg type="int">pipelineIndex</arg>
					</parameters>
				</overload>
			</function>
			<function type="hook">
				<name>InitializeGfxPipelinePushConstantRanges</name>
				<desc>Use this hook to initialize push constants.</desc>
				<lua></lua>
				<overload>
					<parameters>
						<arg type="shader.BasePipelineCreateInfo">createInfo</arg>
						<arg type="int">pipelineIndex</arg>
					</parameters>
				</overload>
			</function>
			<function type="hook">
				<name>InitializeGfxPipelineDescriptorSets</name>
				<desc>Use this hook to initialize descriptor sets.</desc>
				<lua></lua>
				<overload>
					<parameters>
						<arg type="shader.BasePipelineCreateInfo">createInfo</arg>
						<arg type="int">pipelineIndex</arg>
					</parameters>
				</overload>
			</function>
		</collection>
	</collection>
</root>
