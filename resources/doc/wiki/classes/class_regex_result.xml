<root>
	<collection type="library">
		<name>regex</name>
		<collection type="class">
			<name>Result</name>
			<desc>TODO</desc>
			<function type="method" shared="1">
				<name>constructor</name>
				<desc>Creates a new regex result object.</desc>
				<lua></lua>
				<overload>
					<returnValues>
						<arg type="regex.Result">regexResult</arg>
					</returnValues>
				</overload>
			</function>
			<group>
				<function type="method" shared="1">
					<name>HasMatch</name>
					<desc>Returns true if a match has been found.</desc>
					<lua></lua>
					<overload>
						<returnValues>
							<arg type="bool">hasMatch</arg>
						</returnValues>
					</overload>
				</function>
				<function type="method" shared="1">
					<name>GetMatchCount</name>
					<desc>Returns the number of matches that have been found.</desc>
					<lua></lua>
					<overload>
						<returnValues>
							<arg type="int">matchCount</arg>
						</returnValues>
					</overload>
				</function>
			</group>
			<group>
				<function type="method" shared="1">
					<name>GetLength</name>
					<desc>Returns the length of characters of the match.</desc>
					<lua></lua>
					<overload>
						<returnValues>
							<arg type="int">length</arg>
						</returnValues>
					</overload>
				</function>
				<function type="method" shared="1">
					<name>GetPosition</name>
					<desc>Returns the starting position of the match relative to the start of the source string.</desc>
					<lua></lua>
					<overload>
						<returnValues>
							<arg type="int">position</arg>
						</returnValues>
					</overload>
				</function>
			</group>
			<function type="method" shared="1">
				<name>GetString</name>
				<desc>Returns the match as string.</desc>
				<lua></lua>
				<overload>
					<returnValues>
						<arg type="int">match</arg>
					</returnValues>
				</overload>
			</function>
			<function type="method" shared="1">
				<name>SetFormat</name>
				<desc></desc>
				<lua></lua>
				<overload>
					<parameters>
						<arg type="string">format</arg>
						<arg type="regex.Flag">flags</arg>
					</parameters>
				</overload>
			</function>
		</collection>
	</collection>
</root>
