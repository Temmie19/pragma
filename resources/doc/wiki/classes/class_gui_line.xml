<root>
	<collection type="library">
		<name>gui</name>
		<collection type="class" client="1" gui="1">
			<name>Line</name>
			<derivedFrom>gui.Element</derivedFrom>
			<desc>TODO</desc>
			<group>
				<function type="method">
					<name>SetLineWidth</name>
					<desc>Changes the width of the line.</desc>
					<lua></lua>
					<overload>
						<parameters>
							<arg type="int">width</arg>
						</parameters>
					</overload>
				</function>
				<function type="method">
					<name>GetLineWidth</name>
					<desc>Returns the width of the line.</desc>
					<lua></lua>
					<overload>
						<returnValues>
							<arg type="int">width</arg>
						</returnValues>
					</overload>
				</function>
			</group>
			<group>
				<function type="method">
					<name>SetStartPos</name>
					<desc>Changes the start position of the line. Make sure to call [pragma:ref]gui.Line:Update[/pragma:ref] after changing the start or end position of the line.</desc>
					<lua></lua>
					<overload>
						<parameters>
							<arg type="math.Vector2">position</arg>
						</parameters>
					</overload>
				</function>
				<function type="method">
					<name>GetStartPos</name>
					<desc>Returns the start position of the line.</desc>
					<lua></lua>
					<overload>
						<returnValues>
							<arg type="math.Vector2">position</arg>
						</returnValues>
					</overload>
				</function>
				<function type="method">
					<name>SetEndPos</name>
					<desc>Changes the end position of the line. Make sure to call [pragma:ref]gui.Line:Update[/pragma:ref] after changing the start or end position of the line.</desc>
					<lua></lua>
					<overload>
						<parameters>
							<arg type="math.Vector2">position</arg>
						</parameters>
					</overload>
				</function>
				<function type="method">
					<name>GetEndPos</name>
					<desc>Returns the end position of the line.</desc>
					<lua></lua>
					<overload>
						<returnValues>
							<arg type="math.Vector2">position</arg>
						</returnValues>
					</overload>
				</function>
			</group>
			<group>
				<function type="method">
					<name>SetStartColor</name>
					<desc>Changes the start color of the line.</desc>
					<lua></lua>
					<overload>
						<parameters>
							<arg type="util.Color">startColor</arg>
						</parameters>
					</overload>
				</function>
				<function type="method">
					<name>GetStartColor</name>
					<desc>Returns the start color of the line.</desc>
					<lua></lua>
					<overload>
						<returnValues>
							<arg type="util.Color">startColor</arg>
						</returnValues>
					</overload>
				</function>
				<function type="method">
					<name>SetEndColor</name>
					<desc>Changes the end color of the line.</desc>
					<lua></lua>
					<overload>
						<parameters>
							<arg type="util.Color">endColor</arg>
						</parameters>
					</overload>
				</function>
				<function type="method">
					<name>GetEndColor</name>
					<desc>Returns the end color of the line.</desc>
					<lua></lua>
					<overload>
						<returnValues>
							<arg type="util.Color">endColor</arg>
						</returnValues>
					</overload>
				</function>
			</group>
			<function type="method">
				<name>Update</name>
				<desc>Make sure to call this after changing the start or end position of the line.</desc>
				<lua></lua>
				<overload></overload>
			</function>
		</collection>
	</collection>
</root>
