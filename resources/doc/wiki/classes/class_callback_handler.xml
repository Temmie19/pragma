<root>
	<collection type="library">
		<name>util</name>
		<collection type="class" base="1" shared="1" gui="1">
			<name>CallbackHandler</name>
			<desc>TODO</desc>
			<function type="method" shared="1">
				<name>constructor</name>
				<desc>Creates a new callback handler object.</desc>
				<lua></lua>
				<overload>
					<returnValues>
						<arg type="util.CallbackHandler">callbackHandler</arg>
					</returnValues>
				</overload>
			</function>
			<group>
				<function type="method" shared="1">
					<name>AddCallback</name>
					<desc>Adds a new callback function</desc>
					<lua></lua>
					<overload>
						<parameters>
							<arg type="string">name</arg>
							<arg type="method">callback</arg>
						</parameters>
						<returnValues>
							<arg type="util.Callback">callbackObject</arg>
						</returnValues>
					</overload>
				</function>
				<function type="method" shared="1">
					<name>CallCallbacks</name>
					<desc>Calls all callbacks associated with the specified name. A maximum of 8 arguments can be used.</desc>
					<lua></lua>
					<overload>
						<parameters>
							<arg type="string">name</arg>
							<arg type="any" variadic="1">arguments</arg>
						</parameters>
						<returnValues>
							<arg type="any">value</arg>
						</returnValues>
					</overload>
				</function>
			</group>
			<function type="method" shared="1">
				<name>operator==</name>
				<desc>Compares if this callback handler is the same as the specified one.</desc>
				<lua></lua>
				<overload>
					<parameters>
						<arg type="util.CallbackHandler">callbackHandler</arg>
					</parameters>
					<returnValues>
						<arg type="bool">equal</arg>
					</returnValues>
				</overload>
			</function>
			<function type="method" shared="1">
				<name>tostring</name>
				<desc>Converts the callback handler to a string.</desc>
				<lua></lua>
				<overload>
					<returnValues>
						<arg type="string">callbackHandler</arg>
					</returnValues>
				</overload>
			</function>
		</collection>
	</collection>
</root>
