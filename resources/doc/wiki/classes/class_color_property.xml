<root>
	<collection type="library">
		<name>util</name>
		<collection type="class" shared="1" gui="1">
			<name>ColorProperty</name>
			<desc>TODO</desc>
			<function type="method" shared="1">
				<name>constructor</name>
				<desc>Creates a new ColorProperty object.</desc>
				<lua></lua>
				<overload>
					<parameters>
						<arg type="util.Color">color</arg>
					</parameters>
					<returnValues>
						<arg type="util.ColorProperty">colorProperty</arg>
					</returnValues>
				</overload>
				<overload>
					<parameters>
						<arg type="int">red</arg>
						<arg type="int">green</arg>
						<arg type="int">blue</arg>
						<arg type="int">alpha</arg>
					</parameters>
					<returnValues>
						<arg type="util.ColorProperty">colorProperty</arg>
					</returnValues>
				</overload>
				<overload>
					<parameters>
						<arg type="string">color</arg>
					</parameters>
					<returnValues>
						<arg type="util.ColorProperty">colorProperty</arg>
					</returnValues>
				</overload>
				<overload>
					<parameters>
						<arg type="math.Vector">color</arg>
					</parameters>
					<returnValues>
						<arg type="util.ColorProperty">colorProperty</arg>
					</returnValues>
				</overload>
				<overload>
					<parameters>
						<arg type="math.Vector4">color</arg>
					</parameters>
					<returnValues>
						<arg type="util.ColorProperty">colorProperty</arg>
					</returnValues>
				</overload>
				<overload>
					<returnValues>
						<arg type="util.ColorProperty">colorProperty</arg>
					</returnValues>
				</overload>
			</function>
			<function type="method" shared="1">
				<name>tostring</name>
				<desc>Converts the property to a string.</desc>
				<lua></lua>
				<overload>
					<returnValues>
						<arg type="string">property</arg>
					</returnValues>
				</overload>
			</function>
			<!-- Arithmetic methods -->
			<function type="method" shared="1">
				<name>operator+</name>
				<desc>Adds the property to the specified value and returns the ''self'' property.</desc>
				<lua></lua>
				<overload>
					<parameters>
						<arg type="util.ColorProperty">property</arg>
					</parameters>
					<returnValues>
						<arg type="util.ColorProperty">property</arg>
					</returnValues>
				</overload>
				<overload>
					<parameters>
						<arg type="util.Color">value</arg>
					</parameters>
					<returnValues>
						<arg type="util.ColorProperty">property</arg>
					</returnValues>
				</overload>
			</function>
			<function type="function" shared="1">
				<name>+operator</name>
				<desc>Adds the property to the specified value and returns the result.</desc>
				<lua></lua>
				<overload>
					<parameters>
						<arg type="util.Color">value</arg>
						<arg type="util.ColorProperty">property</arg>
					</parameters>
					<returnValues>
						<arg type="util.Color">result</arg>
					</returnValues>
				</overload>
			</function>
			<function type="method" shared="1">
				<name>operator-</name>
				<desc>Subtracts the specified property from this property and returns this property.</desc>
				<lua></lua>
				<overload>
					<parameters>
						<arg type="util.ColorProperty">property</arg>
					</parameters>
					<returnValues>
						<arg type="util.ColorProperty">property</arg>
					</returnValues>
				</overload>
				<overload>
					<parameters>
						<arg type="util.Color">value</arg>
					</parameters>
					<returnValues>
						<arg type="util.ColorProperty">property</arg>
					</returnValues>
				</overload>
			</function>
			<function type="function" shared="1">
				<name>-operator</name>
				<desc>Subtracts the property from the specified value and returns the result.</desc>
				<lua></lua>
				<overload>
					<parameters>
						<arg type="util.Color">value</arg>
						<arg type="util.ColorProperty">property</arg>
					</parameters>
					<returnValues>
						<arg type="util.Color">result</arg>
					</returnValues>
				</overload>
			</function>
			<function type="method" shared="1">
				<name>operator*</name>
				<desc>Multiplies the specified property with this property and returns this property.</desc>
				<lua></lua>
				<overload>
					<parameters>
						<arg type="float">value</arg>
					</parameters>
					<returnValues>
						<arg type="util.ColorProperty">property</arg>
					</returnValues>
				</overload>
			</function>
			<function type="function" shared="1">
				<name>*operator</name>
				<desc>Multiplies the property from the specified value and returns the result.</desc>
				<lua></lua>
				<overload>
					<parameters>
						<arg type="float">value</arg>
						<arg type="util.ColorProperty">property</arg>
					</parameters>
					<returnValues>
						<arg type="util.Color">result</arg>
					</returnValues>
				</overload>
			</function>
			<function type="method" shared="1">
				<name>operator/</name>
				<desc>Divides this property by the specified property and returns this property.</desc>
				<lua></lua>
				<overload>
					<parameters>
						<arg type="float">value</arg>
					</parameters>
					<returnValues>
						<arg type="util.ColorProperty">property</arg>
					</returnValues>
				</overload>
			</function>
			<function type="method" shared="1" commutative="1">
				<name>operator==</name>
				<desc>Compares this property to the specified value.</desc>
				<lua></lua>
				<overload>
					<parameters>
						<arg type="util.ColorProperty">property</arg>
					</parameters>
					<returnValues>
						<arg type="bool">equal</arg>
					</returnValues>
				</overload>
				<overload>
					<parameters>
						<arg type="util.Color">value</arg>
					</parameters>
					<returnValues>
						<arg type="bool">equal</arg>
					</returnValues>
				</overload>
			</function>
			<!-- Arithmetic methods -->
			<!-- Generic methods -->
			<group>
				<function type="method" shared="1">
					<name>AddCallback</name>
					<desc>
						Adds a new callback to this property which will be called whenever the property's value changes. The syntax for ''callback'' is:\n
						{{template_overload|{{template_type|void}}|callback|{{template_param|util.Color}} oldValue,{{template_param|util.Color}} newValue}}
					</desc>
					<lua></lua>
					<overload>
						<parameters>
							<arg type="function">callback</arg>
						</parameters>
						<returnValues>
							<arg type="util.Callback">callbackObject</arg>
						</returnValues>
					</overload>
				</function>
				<function type="method" shared="1">
					<name>AddModifier</name>
					<desc>
						Adds a new modifier to this property which will be called before the property's value changes. Use this function to appliy changes to the value before it is applied. The syntax for ''modifier'' is:\n
						{{template_overload|{{template_type|util.Color}}|callback|{{template_param|util.Color}} value}}
					</desc>
					<lua></lua>
					<overload>
						<parameters>
							<arg type="function">modifier</arg>
						</parameters>
						<returnValues>
							<arg type="util.Callback">callbackObject</arg>
						</returnValues>
					</overload>
				</function>
				<function type="method" shared="1">
					<name>InvokeCallbacks</name>
					<desc>Invokes all registered callbacks for this property.</desc>
					<lua></lua>
					<overload></overload>
				</function>
			</group>
			<group>
				<function type="method" shared="1">
					<name>Get</name>
					<desc>Returns the value of this property.</desc>
					<lua></lua>
					<overload>
						<returnValues>
							<arg type="util.Color">value</arg>
						</returnValues>
					</overload>
				</function>
				<function type="method" shared="1">
					<name>Set</name>
					<desc>Changes the value of this property.</desc>
					<lua></lua>
					<overload>
						<parameters>
							<arg type="util.Color">value</arg>
						</parameters>
					</overload>
				</function>
			</group>
			<group>
				<function type="method" shared="1">
					<name>SetLocked</name>
					<desc>Locks or unlocks this property. If the property is locked, its value cannot be changed.</desc>
					<lua></lua>
					<overload>
						<parameters>
							<arg type="bool">locked</arg>
						</parameters>
					</overload>
				</function>
				<function type="method" shared="1">
					<name>IsLocked</name>
					<desc>Returns ''true'' if the property is locked.</desc>
					<lua></lua>
					<overload>
						<returnValues>
							<arg type="bool">locked</arg>
						</returnValues>
					</overload>
				</function>
			</group>
			<!-- Generic methods -->
			<group>
				<function type="method" shared="1">
					<name>Link</name>
					<desc>Links this property to the specified property and clears the previous existing link (if there is one). This property's value will change whenever the value of ''otherProperty'' changes.</desc>
					<lua></lua>
					<overload>
						<parameters>
							<arg type="util.ColorProperty">property</arg>
						</parameters>
					</overload>
					<overload>
						<parameters>
							<arg type="util.StringProperty">property</arg>
						</parameters>
					</overload>
					<overload>
						<parameters>
							<arg type="util.VectorProperty">property</arg>
						</parameters>
					</overload>
					<overload>
						<parameters>
							<arg type="util.Vector4Property">property</arg>
						</parameters>
					</overload>
				</function>
				<function type="method" shared="1">
					<name>Unlink</name>
					<desc>Clears this property's link if there is one.</desc>
					<lua></lua>
					<overload></overload>
				</function>
			</group>
		</collection>
	</collection>
</root>
