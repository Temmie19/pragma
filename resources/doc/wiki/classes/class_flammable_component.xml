<root>
	<collection type="library">
		<name>ents</name>
		<collection type="class">
			<name>FlammableComponent</name>
			<derivedFrom>ents.EntityComponent</derivedFrom>
			<desc>TODO</desc>
			<group>
				<function type="method" shared="1">
					<name>Ignite</name>
					<desc>Ignites the entity if it is ignitable. If the duration is 0, the entity will stay on fire until it's extinguished, or it is detroyed.</desc>
					<lua></lua>
					<overload>
						<parameters>
							<arg type="float" default="0.0">duration</arg>
							<arg type="ents.Entity" default="NULL">attacker</arg>
							<arg type="ents.Entity" default="NULL">inflictor</arg>
						</parameters>
					</overload>
				</function>
				<function type="method" shared="1">
					<name>Extinguish</name>
					<desc>Extinguishes the entity if it is on fire</desc>
					<lua></lua>
					<overload></overload>
				</function>
			</group>
			<group>
				<function type="method" shared="1">
					<name>IsOnFire</name>
					<desc>Returns true if this entity is on fire.</desc>
					<lua></lua>
					<overload>
						<returnValues>
							<arg type="bool">onFire</arg>
						</returnValues>
					</overload>
				</function>
				<function type="method" shared="1">
					<name>GetOnFireProperty</name>
					<desc>Returns the component's on-fire property.</desc>
					<lua></lua>
					<overload>
						<returnValues>
							<arg type="util.BoolProperty">onFireProperty</arg>
						</returnValues>
					</overload>
				</function>
			</group>
			<group>
				<function type="method" shared="1">
					<name>IsIgnitable</name>
					<desc>Returns true if this entity can be ignited. If the entity doesn't have a valid model, this will always fail.</desc>
					<lua></lua>
					<overload>
						<returnValues>
							<arg type="bool">ignitable</arg>
						</returnValues>
					</overload>
				</function>
				<function type="method" shared="1">
					<name>SetIgnitable</name>
					<desc>Changes whether the entity can be ignited.</desc>
					<lua></lua>
					<overload>
						<parameters>
							<arg type="bool">ignitable</arg>
						</parameters>
					</overload>
				</function>
				<function type="method" shared="1">
					<name>GetIgnitableProperty</name>
					<desc>Returns the component's ignitable property.</desc>
					<lua></lua>
					<overload>
						<returnValues>
							<arg type="util.BoolProperty">ignitableProperty</arg>
						</returnValues>
					</overload>
				</function>
			</group>
		</collection>
	</collection>
</root>
