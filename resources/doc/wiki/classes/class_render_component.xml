<root>
	<collection type="library">
		<name>ents</name>
		<collection type="class">
			<name>RenderComponent</name>
			<derivedFrom>ents.EntityComponent</derivedFrom>
			<desc>TODO</desc>
			<group>
				<function type="method" shared="1">
					<name>GetCastShadows</name>
					<desc>Returns ''true'' if this entity is casting shadows.</desc>
					<lua></lua>
					<overload>
						<returnValues>
							<arg type="bool">castShadows</arg>
						</returnValues>
					</overload>
				</function>
				<function type="method" shared="1">
					<name>SetCastShadows</name>
					<desc>Changes whether this entity should cast shadows.</desc>
					<lua></lua>
					<overload>
						<parameters>
							<arg type="bool">castShadows</arg>
						</parameters>
					</overload>
				</function>
			</group>
			<!-- clientside -->
			<group>
				<function type="method" client="1">
					<name>GetModelMatrix</name>
					<desc>Returns the entity's model matrix.</desc>
					<lua></lua>
					<overload>
						<returnValues>
							<arg type="math.Mat4">modelMatrix</arg>
						</returnValues>
					</overload>
				</function>
				<function type="method" client="1">
					<name>GetTranslationMatrix</name>
					<desc>Returns the entity's translation matrix.</desc>
					<lua></lua>
					<overload>
						<returnValues>
							<arg type="math.Mat4">translationMatrix</arg>
						</returnValues>
					</overload>
				</function>
				<function type="method" client="1">
					<name>GetRotationMatrix</name>
					<desc>Returns the entity's rotation matrix.</desc>
					<lua></lua>
					<overload>
						<returnValues>
							<arg type="math.Mat4">rotationMatrix</arg>
						</returnValues>
					</overload>
				</function>
				<function type="method" client="1">
					<name>GetTransformationMatrix</name>
					<desc>Returns the entity's transformation matrix.</desc>
					<lua></lua>
					<overload>
						<returnValues>
							<arg type="math.Mat4">transformationMatrix</arg>
						</returnValues>
					</overload>
				</function>
			</group>
			<group>
				<function type="method" client="1">
					<name>SetRenderMode</name>
					<desc>Changes the entity's render mode.</desc>
					<lua></lua>
					<overload>
						<parameters>
							<arg type="ents.RenderComponent.RenderMode">renderMode</arg>
						</parameters>
					</overload>
				</function>
				<function type="method" client="1">
					<name>GetRenderMode</name>
					<desc>Returns the entity's render mode.</desc>
					<lua></lua>
					<overload>
						<returnValues>
							<arg type="ents.RenderComponent.RenderMode">renderMode</arg>
						</returnValues>
					</overload>
				</function>
				<function type="method" client="1">
					<name>GetRenderModeProperty</name>
					<desc>Returns the render mode property.</desc>
					<lua></lua>
					<overload>
						<returnValues>
							<arg type="util.IntProperty">property</arg>
						</returnValues>
					</overload>
				</function>
			</group>
			<group>
				<function type="method" client="1">
					<name>GetRenderBounds</name>
					<desc>Returns the entity's render bounds.</desc>
					<lua></lua>
					<overload>
						<returnValues>
							<arg type="math.Vector">min</arg>
							<arg type="math.Vector">max</arg>
						</returnValues>
					</overload>
				</function>
				<function type="method" client="1">
					<name>SetRenderBounds</name>
					<desc>Changes the entity's render bounds.</desc>
					<lua></lua>
					<overload>
						<parameters>
							<arg type="math.Vector">min</arg>
							<arg type="math.Vector">max</arg>
						</parameters>
					</overload>
				</function>
				<function type="method" client="1">
					<name>GetRenderSphereBounds</name>
					<desc>Returns the origin and radius of a sphere encompassing the entire model.</desc>
					<lua></lua>
					<overload>
						<returnValues>
							<arg type="math.Vector">origin</arg>
							<arg type="float">radius</arg>
						</returnValues>
					</overload>
				</function>
			</group>
			<group>
				<function type="method" client="1">
					<name>UpdateRenderBuffers</name>
					<desc></desc>
					<lua></lua>
					<overload>
						<parameters>
							<arg type="vulkan.CommandBuffer">drawCommandBuffer</arg>
							<arg type="bool" default="false">forceBufferUpdate</arg>
						</parameters>
					</overload>
				</function>
				<function type="method" client="1">
					<name>GetRenderBuffer</name>
					<desc>Returns the entity's buffer containing data required for rendering.</desc>
					<lua></lua>
					<overload>
						<returnValues>
							<arg type="vulkan.Buffer">buffer</arg>
						</returnValues>
					</overload>
				</function>
				<function type="method" client="1">
					<name>GetBoneBuffer</name>
					<desc>Returns the entity's buffer containing data about its skeleton. If the entity isn't animated, ''nil'' will be returned.</desc>
					<lua></lua>
					<overload>
						<returnValues>
							<arg type="vulkan.Buffer">buffer</arg>
						</returnValues>
					</overload>
				</function>
			</group>
			<enum_set client="1">
				<name>Event</name>
				<enum>EVENT_ON_UPDATE_RENDER_DATA</enum>
				<enum>EVENT_ON_RENDER_BOUNDS_CHANGED</enum>
				<enum>EVENT_ON_RENDER_BUFFERS_INITIALIZED</enum>
				<enum>EVENT_SHOULD_DRAW</enum>
				<enum>EVENT_SHOULD_DRAW_SHADOW</enum>
				<enum>EVENT_ON_UPDATE_RENDER_MATRICES</enum>
			</enum_set>
			<enum_set client="1">
				<name>RenderMode</name>
				<enum value="0">RENDERMODE_NONE</enum>
				<enum value="1">RENDERMODE_AUTO</enum>
				<enum value="2">RENDERMODE_WORLD</enum>
				<enum value="3">RENDERMODE_VIEW</enum>
				<enum value="4">RENDERMODE_SKYBOX</enum>
				<enum value="5">RENDERMODE_WATER</enum>
			</enum_set>
			<!-- clientside -->
		</collection>
	</collection>
</root>
