<root>
	<collection type="library">
		<name>shader</name>
		<collection type="class" client="1" gui="1">
			<name>Graphics</name>
			<derivedFrom>shader.Shader</derivedFrom>
			<desc>TODO</desc>
			<group>
				<function type="method">
					<name>RecordBindVertexBuffer</name>
					<desc>Bind a vertex buffer to a command buffer.</desc>
					<url>https://www.khronos.org/registry/vulkan/specs/1.1-extensions/man/html/vkCmdBindVertexBuffers.html</url>
					<lua></lua>
					<overload>
						<parameters>
							<arg type="vulkan.Buffer">buffer</arg>
							<arg type="int" default="0">startBinding</arg>
							<arg type="int" default="0">offset</arg>
						</parameters>
						<returnValues>
							<arg type="bool">success</arg>
						</returnValues>
					</overload>
				</function>
				<function type="method">
					<name>RecordBindVertexBuffers</name>
					<desc>Bind vertex buffers to a command buffer.</desc>
					<url>https://www.khronos.org/registry/vulkan/specs/1.1-extensions/man/html/vkCmdBindVertexBuffers.html</url>
					<lua></lua>
					<overload>
						<parameters>
							<arg type="table" subType="vulkan.Buffer">buffers</arg>
							<arg type="int" default="0">startBinding</arg>
							<arg type="table" subType="int" default="{}">offsets</arg>
						</parameters>
						<returnValues>
							<arg type="bool">success</arg>
						</returnValues>
					</overload>
				</function>
				<function type="method">
					<name>RecordBindIndexBuffer</name>
					<desc>Bind an index buffer to a command buffer.</desc>
					<url>https://www.khronos.org/registry/vulkan/specs/1.1-extensions/man/html/vkCmdBindIndexBuffer.html</url>
					<lua></lua>
					<overload>
						<parameters>
							<arg type="vulkan.Buffer">buffer</arg>
							<arg type="vulkan.IndexType">indexType</arg>
							<arg type="int" default="0">offset</arg>
						</parameters>
						<returnValues>
							<arg type="bool">success</arg>
						</returnValues>
					</overload>
				</function>
			</group>
			<group>
				<function type="method">
					<name>RecordDraw</name>
					<desc>Draw primitives. If no parameters are specified, the behavior will be shader-specific.</desc>
					<url>https://www.khronos.org/registry/vulkan/specs/1.1-extensions/man/html/vkCmdDraw.html</url>
					<lua></lua>
					<overload>
						<parameters>
							<arg type="int">vertexCount</arg>
							<arg type="int" default="1">instanceCount</arg>
							<arg type="int" default="0">firstVertex</arg>
							<arg type="int" default="0">firstInstance</arg>
						</parameters>
						<returnValues>
							<arg type="bool">success</arg>
						</returnValues>
					</overload>
					<overload>
						<returnValues>
							<arg type="bool">success</arg>
						</returnValues>
					</overload>
				</function>
				<function type="method">
					<name>RecordDrawIndexed</name>
					<desc>Issue an indexed draw into a command buffer.</desc>
					<url>https://www.khronos.org/registry/vulkan/specs/1.1-extensions/man/html/vkCmdDrawIndexed.html</url>
					<lua></lua>
					<overload>
						<parameters>
							<arg type="int">indexCount</arg>
							<arg type="int" default="1">instanceCount</arg>
							<arg type="int" default="0">firstIndex</arg>
							<arg type="int" default="0">vertexOffset</arg>
							<arg type="int" default="0">firstInstance</arg>
						</parameters>
						<returnValues>
							<arg type="bool">success</arg>
						</returnValues>
					</overload>
				</function>
				<function type="method">
					<name>RecordBeginDraw</name>
					<desc>Binds the shader pipeline to a command buffer and prepares the shader for rendering.</desc>
					<lua></lua>
					<overload>
						<parameters>
							<arg type="vulkan.CommandBuffer">commandBuffer</arg>
							<arg type="int" default="0">pipelineIdx</arg>
						</parameters>
						<returnValues>
							<arg type="bool">success</arg>
						</returnValues>
					</overload>
				</function>
				<function type="method">
					<name>RecordEndDraw</name>
					<desc>Performs cleanup to end the rendering phase.</desc>
					<lua></lua>
					<overload>
						<returnValues>
							<arg type="bool">success</arg>
						</returnValues>
					</overload>
				</function>
			</group>
			<function type="method">
				<name>GetRenderPass</name>
				<desc>Returns the render pass associated with the specified pipelines.</desc>
				<lua></lua>
				<overload>
					<parameters>
						<arg type="int" default="0">pipelineIdx</arg>
					</parameters>
					<returnValues>
						<arg type="vulkan.RenderPass">renderPass</arg>
					</returnValues>
				</overload>
			</function>
		</collection>
	</collection>
</root>
