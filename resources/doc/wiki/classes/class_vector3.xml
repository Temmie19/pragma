<root>
	<collection type="library">
		<name>math</name>
		<collection type="class" gui="1">
			<name>Vector</name>
			<desc>TODO</desc>
			<function type="method" shared="1">
				<name>constructor</name>
				<desc>Creates a new Vector object.</desc>
				<lua></lua>
				<overload>
					<returnValues>
						<arg type="math.Vector">vector</arg>
					</returnValues>
				</overload>
				<overload>
					<parameters>
						<arg type="float">x</arg>
						<arg type="float">y</arg>
						<arg type="float">z</arg>
					</parameters>
					<returnValues>
						<arg type="math.Vector">vector</arg>
					</returnValues>
				</overload>
			</function>
			<function type="method" shared="1">
				<name>-operator</name>
				<desc>Negates this vector and returns the result.</desc>
				<lua></lua>
				<overload>
					<returnValues>
						<arg type="math.Vector">negatedVector</arg>
					</returnValues>
				</overload>
			</function>
			<function type="method" shared="1" commutative="1">
				<name>operator/</name>
				<desc>Divides the vector by the specified value and returns the result.</desc>
				<lua></lua>
				<overload>
					<parameters>
						<arg type="float">value</arg>
					</parameters>
					<returnValues>
						<arg type="math.Vector">result</arg>
					</returnValues>
				</overload>
			</function>
			<function type="method" shared="1" commutative="1">
				<name>operator*</name>
				<desc>Multiplies the vector by the specified value and returns the result.</desc>
				<lua></lua>
				<overload>
					<parameters>
						<arg type="float">value</arg>
					</parameters>
					<returnValues>
						<arg type="math.Vector">result</arg>
					</returnValues>
				</overload>
				<overload>
					<parameters>
						<arg type="math.Quaternion">result</arg>
					</parameters>
					<returnValues>
						<arg type="math.Vector">result</arg>
					</returnValues>
				</overload>
			</function>
			<function type="method" shared="1">
				<name>operator+</name>
				<desc>Adds the vector to the specified value and returns the result.</desc>
				<lua></lua>
				<overload>
					<parameters>
						<arg type="math.Vector">value</arg>
					</parameters>
					<returnValues>
						<arg type="math.Vector">result</arg>
					</returnValues>
				</overload>
			</function>
			<function type="method" shared="1">
				<name>operator-</name>
				<desc>Subtracts the specified value from this vector and returns the result.</desc>
				<lua></lua>
				<overload>
					<parameters>
						<arg type="math.Vector">value</arg>
					</parameters>
					<returnValues>
						<arg type="math.Vector">result</arg>
					</returnValues>
				</overload>
			</function>
			<function type="method" shared="1">
				<name>operator==</name>
				<desc>Compares this vector to the specified vector and returns ''true'' if they their values are equal.</desc>
				<lua></lua>
				<overload>
					<parameters>
						<arg type="math.Vector">value</arg>
					</parameters>
					<returnValues>
						<arg type="bool">equal</arg>
					</returnValues>
				</overload>
			</function>
			<function type="method" shared="1">
				<name>Copy</name>
				<desc>Creates a copy of this object.</desc>
				<lua></lua>
				<overload>
					<returnValues>
						<arg type="math.Vector">vector</arg>
					</returnValues>
				</overload>
			</function>
			<function type="method" shared="1">
				<name>tostring</name>
				<desc>Converts the vector to a string.</desc>
				<lua></lua>
				<overload>
					<returnValues>
						<arg type="string">vector</arg>
					</returnValues>
				</overload>
			</function>
			<group>
				<function type="method" shared="1">
					<name>Set</name>
					<desc>Changes the vector components to the specified values.</desc>
					<lua></lua>
					<overload>
						<parameters>
							<arg type="math.Vector">vector</arg>
						</parameters>
					</overload>
					<overload>
						<parameters>
							<arg type="float">x</arg>
							<arg type="float">y</arg>
							<arg type="float">z</arg>
						</parameters>
					</overload>
				</function>
				<function type="method" shared="1">
					<name>Get</name>
					<desc>Returns the ''n'''th component of the vector.</desc>
					<lua></lua>
					<overload>
						<parameters>
							<arg type="int">index</arg>
						</parameters>
						<returnValues>
							<arg type="float">value</arg>
						</returnValues>
					</overload>
				</function>
			</group>
			<group>
				<function type="method" shared="1">
					<name>GetNormal</name>
					<desc>Returns a normalized version of this vector.</desc>
					<lua></lua>
					<overload>
						<returnValues>
							<arg type="math.Vector">normal</arg>
						</returnValues>
					</overload>
				</function>
				<function type="method" shared="1">
					<name>Normalize</name>
					<desc>Normalizes this vector.</desc>
					<lua></lua>
					<overload></overload>
				</function>
			</group>
			<group>
				<function type="method" shared="1">
					<name>ToEulerAngles</name>
					<desc>Converts this vector to euler angles.</desc>
					<lua></lua>
					<overload>
						<returnValues>
							<arg type="math.EulerAngles">angles</arg>
						</returnValues>
					</overload>
				</function>
				<function type="method" shared="1">
					<name>DotProduct</name>
					<desc>Returns the dot product between this vector and the given vector.</desc>
					<lua></lua>
					<overload>
						<parameters>
							<arg type="math.Vector">target</arg>
						</parameters>
						<returnValues>
							<arg type="float">crossProduct</arg>
						</returnValues>
					</overload>
				</function>
			</group>
			<group>
				<function type="method" shared="1">
					<name>Length</name>
					<desc>Returns the length of this vector.</desc>
					<lua></lua>
					<overload>
						<returnValues>
							<arg type="float">length</arg>
						</returnValues>
					</overload>
				</function>
				<function type="method" shared="1">
					<name>LengthSqr</name>
					<desc>Returns the squared length.</desc>
					<lua></lua>
					<overload>
						<returnValues>
							<arg type="float">squaredLength</arg>
						</returnValues>
					</overload>
				</function>
				<function type="method" shared="1">
					<name>Distance</name>
					<desc>Returns the distance between this vector and the given vector.</desc>
					<lua></lua>
					<overload>
						<parameters>
							<arg type="math.Vector">target</arg>
						</parameters>
						<returnValues>
							<arg type="float">distance</arg>
						</returnValues>
					</overload>
				</function>
				<function type="method" shared="1">
					<name>DistanceSqr</name>
					<desc>Returns the squared distance between this vector and the given vector.</desc>
					<lua></lua>
					<overload>
						<parameters>
							<arg type="math.Vector">target</arg>
						</parameters>
						<returnValues>
							<arg type="float">squaredDistance</arg>
						</returnValues>
					</overload>
				</function>
				<function type="method" shared="1">
					<name>PlanarDistance</name>
					<desc>Returns the distance between this vector and the given vector ''target'' on the plane defined by ''planeNormal''.</desc>
					<lua></lua>
					<overload>
						<parameters>
							<arg type="math.Vector">target</arg>
							<arg type="math.Vector">planeNormal</arg>
						</parameters>
						<returnValues>
							<arg type="float">distance</arg>
						</returnValues>
					</overload>
				</function>
				<function type="method" shared="1">
					<name>PlanarDistanceSqr</name>
					<desc>Returns the squared distance between this vector and the given vector ''target'' on the plane defined by ''planeNormal''.</desc>
					<lua></lua>
					<overload>
						<parameters>
							<arg type="math.Vector">target</arg>
							<arg type="math.Vector">planeNormal</arg>
						</parameters>
						<returnValues>
							<arg type="float">squaredDistance</arg>
						</returnValues>
					</overload>
				</function>
			</group>
			<function type="method" shared="1">
				<name>Cross</name>
				<desc>Returns the cross product between this vector and the given vector.</desc>
				<lua></lua>
				<overload>
					<parameters>
						<arg type="math.Vector">target</arg>
					</parameters>
					<returnValues>
						<arg type="math.Vector">crossProduct</arg>
					</returnValues>
				</overload>
			</function>
			<group>
				<function type="method" shared="1">
					<name>GetRotation</name>
					<desc>Returns the rotation between this vector and the given vector.</desc>
					<lua></lua>
					<overload>
						<parameters>
							<arg type="math.Vector">target</arg>
						</parameters>
						<returnValues>
							<arg type="math.Quaternion">rotation</arg>
						</returnValues>
					</overload>
				</function>
				<function type="method" shared="1">
					<name>Rotate</name>
					<desc>Rotates this vector around the given euler angles / quaternion / axis angle.</desc>
					<lua></lua>
					<overload>
						<parameters>
							<arg type="math.EulerAngles">target</arg>
						</parameters>
					</overload>
					<overload>
						<parameters>
							<arg type="math.Quaternion">target</arg>
						</parameters>
					</overload>
					<overload>
						<parameters>
							<arg type="math.Vector">axis</arg>
							<arg type="float">angle</arg>
						</parameters>
					</overload>
				</function>
				<function type="method" shared="1">
					<name>RotateAround</name>
					<desc>Rotates this vector by the specified euler angles around the given origin.</desc>
					<lua></lua>
					<overload>
						<parameters>
							<arg type="math.Vector">origin</arg>
							<arg type="math.EulerAngles">angles</arg>
						</parameters>
					</overload>
				</function>
			</group>
			<function type="method" shared="1">
				<name>Lerp</name>
				<desc>Linearly interpolates between this vector and the given vector v by the specified factor.</desc>
				<lua></lua>
				<overload>
					<parameters>
						<arg type="math.Vector">target</arg>
						<arg type="float">factor</arg>
					</parameters>
					<returnValues>
						<arg type="math.Vector">interpolatedVector</arg>
					</returnValues>
				</overload>
			</function>
			<function type="method" shared="1">
				<name>ToMatrix</name>
				<desc>Creates a translation matrix from this vector.</desc>
				<lua></lua>
				<overload>
					<returnValues>
						<arg type="math.Mat4">translationMatrix</arg>
					</returnValues>
				</overload>
			</function>
			<function type="method" shared="1">
				<name>SnapToGrid</name>
				<desc>Snaps all components of the vector to the given grid size.</desc>
				<lua></lua>
				<overload>
					<parameters>
						<arg type="int" default="1">gridSize</arg>
					</parameters>
				</overload>
			</function>
			<group>
				<function type="method" shared="1">
					<name>Project</name>
					<desc>Projects this vector onto a normal vector and returns the result.</desc>
					<lua></lua>
					<overload>
						<parameters>
							<arg type="math.Vector">target</arg>
						</parameters>
						<returnValues>
							<arg type="math.Vector">projectedVector</arg>
						</returnValues>
					</overload>
				</function>
				<function type="method" shared="1">
					<name>ProjectToPlane</name>
					<desc>Projects the specified vector to the given plane.</desc>
					<lua></lua>
					<overload>
						<parameters>
							<arg type="math.Vector">target</arg>
							<arg type="math.Vector">planeNormal</arg>
							<arg type="float">planeDistance</arg>
						</parameters>
						<returnValues>
							<arg type="math.Vector">projectedVector</arg>
						</returnValues>
					</overload>
				</function>
			</group>
			<function type="method" shared="1">
				<name>GetPerpendicular</name>
				<desc>Returns a unit-vector perpendicular to this one.</desc>
				<lua></lua>
				<overload>
					<returnValues>
						<arg type="math.Vector">perpendicularVector</arg>
					</returnValues>
				</overload>
			</function>
			<function type="method" shared="1">
				<name>OuterProduct</name>
				<desc>Calculates the outer product (tensor product) between this vector and the specified vector.</desc>
				<lua></lua>
				<overload>
					<parameters>
						<arg type="math.Vector">target</arg>
					</parameters>
					<returnValues>
						<arg type="math.Mat3">tensorProduct</arg>
					</returnValues>
				</overload>
			</function>
			<member type="float" mode="rw">
				<name>x</name>
				<desc>The x-axis component of the vector.</desc>
				<default>0.0</default>
			</member>
			<member type="float" mode="rw">
				<name>y</name>
				<desc>The y-axis component of the vector.</desc>
				<default>0.0</default>
			</member>
			<member type="float" mode="rw">
				<name>z</name>
				<desc>The z-axis component of the vector.</desc>
				<default>0.0</default>
			</member>
		</collection>
	</collection>
</root>
