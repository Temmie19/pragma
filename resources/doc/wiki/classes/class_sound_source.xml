<root>
	<collection type="library">
		<name>sound</name>
		<collection type="class" gui="1">
			<name>Source</name>
			<desc>TODO</desc>
			<function type="method" shared="1">
				<name>tostring</name>
				<desc>Converts the sound source to a string.</desc>
				<lua></lua>
				<overload>
					<returnValues>
						<arg type="string">source</arg>
					</returnValues>
				</overload>
			</function>
			<group>
				<function type="method" shared="1">
					<name>Play</name>
					<desc>Plays or resumes the sound.</desc>
					<lua></lua>
					<overload></overload>
				</function>
				<function type="method" shared="1">
					<name>Stop</name>
					<desc>Stops the sound.</desc>
					<lua></lua>
					<overload></overload>
				</function>
				<function type="method" shared="1">
					<name>IsPlaying</name>
					<desc>Returns ''true'' if the sound is currently playing.</desc>
					<lua></lua>
					<overload>
						<returnValues>
							<arg type="bool">isPlaying</arg>
						</returnValues>
					</overload>
				</function>
				<function type="method" shared="1">
					<name>IsStopped</name>
					<desc>Returns ''true'' if the sound is stopped.</desc>
					<lua></lua>
					<overload>
						<returnValues>
							<arg type="bool">isStopped</arg>
						</returnValues>
					</overload>
				</function>
				<function type="method" shared="1">
					<name>GetState</name>
					<desc>Returns the sound's current state.</desc>
					<lua></lua>
					<overload>
						<returnValues>
							<arg type="sound.State">state</arg>
						</returnValues>
					</overload>
				</function>
				<function type="method" shared="1">
					<name>Rewind</name>
					<desc>Rewinds the sound to the beginning.</desc>
					<lua></lua>
					<overload></overload>
				</function>
				<function type="method" shared="1">
					<name>Pause</name>
					<desc>Pauses the sound.</desc>
					<lua></lua>
					<overload></overload>
				</function>
				<function type="method" shared="1">
					<name>IsPaused</name>
					<desc>Pauses the sound.</desc>
					<lua></lua>
					<overload>
						<returnValues>
							<arg type="bool">isPaused</arg>
						</returnValues>
					</overload>
				</function>
			</group>
			<group>
				<function type="method" shared="1">
					<name>GetOffset</name>
					<desc>Returns the current playback offset in the range of [0,1].</desc>
					<lua></lua>
					<overload>
						<returnValues>
							<arg type="float">offset</arg>
						</returnValues>
					</overload>
				</function>
				<function type="method" shared="1">
					<name>SetOffset</name>
					<desc>Changes the current playback offset.</desc>
					<lua></lua>
					<overload>
						<parameters>
							<arg type="float">offset</arg>
						</parameters>
					</overload>
				</function>
				<function type="method" shared="1">
					<name>GetTimeOffset</name>
					<desc>Returns the current playback offset in seconds.</desc>
					<lua></lua>
					<overload>
						<returnValues>
							<arg type="float">offset</arg>
						</returnValues>
					</overload>
				</function>
				<function type="method" shared="1">
					<name>SetTimeOffset</name>
					<desc>Changes the current playback offset in seconds.</desc>
					<lua></lua>
					<overload>
						<parameters>
							<arg type="float">offset</arg>
						</parameters>
					</overload>
				</function>
			</group>
			<group>
				<function type="method" shared="1">
					<name>GetPitch</name>
					<desc>Returns the pitch.</desc>
					<lua></lua>
					<overload>
						<returnValues>
							<arg type="float">pitch</arg>
						</returnValues>
					</overload>
				</function>
				<function type="method" shared="1">
					<name>SetPitch</name>
					<desc>Changes the pitch.</desc>
					<lua></lua>
					<overload>
						<parameters>
							<arg type="float">pitch</arg>
						</parameters>
					</overload>
				</function>
				<function type="method" shared="1">
					<name>GetGain</name>
					<desc>Returns the sound's volume.</desc>
					<lua></lua>
					<overload>
						<returnValues>
							<arg type="float">gain</arg>
						</returnValues>
					</overload>
				</function>
				<function type="method" shared="1">
					<name>SetGain</name>
					<desc>Changes the sound's volume.</desc>
					<lua></lua>
					<overload>
						<parameters>
							<arg type="float">gain</arg>
						</parameters>
					</overload>
				</function>
			</group>
			<group>
				<function type="method" shared="1">
					<name>SetLooping</name>
					<desc>Changes whether the sound should be looping.</desc>
					<lua></lua>
					<overload>
						<parameters>
							<arg type="bool">loop</arg>
						</parameters>
					</overload>
				</function>
				<function type="method" shared="1">
					<name>IsLooping</name>
					<desc>Returns ''true'' if the sound is looping.</desc>
					<lua></lua>
					<overload>
						<returnValues>
							<arg type="bool">isLooping</arg>
						</returnValues>
					</overload>
				</function>
			</group>
			<group>
				<function type="method" shared="1">
					<name>GetPos</name>
					<desc>Returns the sound's world position.</desc>
					<lua></lua>
					<overload>
						<returnValues>
							<arg type="math.Vector">position</arg>
						</returnValues>
					</overload>
				</function>
				<function type="method" shared="1">
					<name>SetPos</name>
					<desc>Changes the sound's world position.</desc>
					<lua></lua>
					<overload>
						<parameters>
							<arg type="math.Vector">position</arg>
						</parameters>
					</overload>
				</function>
				<function type="method" shared="1">
					<name>SetDopplerFactor</name>
					<desc></desc>
					<lua></lua>
					<overload>
						<parameters>
							<arg type="float">dopplerFactor</arg>
						</parameters>
					</overload>
				</function>
				<function type="method" shared="1">
					<name>GetDopplerFactor</name>
					<desc></desc>
					<lua></lua>
					<overload>
						<returnValues>
							<arg type="float">dopplerFactor</arg>
						</returnValues>
					</overload>
				</function>
				<function type="method" shared="1">
					<name>GetVelocity</name>
					<desc>Returns the sound's velocity.</desc>
					<lua></lua>
					<overload>
						<returnValues>
							<arg type="math.Vector">velocity</arg>
						</returnValues>
					</overload>
				</function>
				<function type="method" shared="1">
					<name>SetVelocity</name>
					<desc>Changes the sound's velocity. Note that this will not have any effect on the sound's position, it will only affect the doppler effect.</desc>
					<lua></lua>
					<overload>
						<parameters>
							<arg type="math.Vector">velocity</arg>
						</parameters>
					</overload>
				</function>
				<function type="method" shared="1">
					<name>GetDirection</name>
					<desc>Returns the sound's direction.</desc>
					<lua></lua>
					<overload>
						<returnValues>
							<arg type="math.Vector">direction</arg>
						</returnValues>
					</overload>
				</function>
				<function type="method" shared="1">
					<name>SetDirection</name>
					<desc>Changes the sound's direction.</desc>
					<lua></lua>
					<overload>
						<parameters>
							<arg type="math.Vector">direction</arg>
						</parameters>
					</overload>
				</function>
			</group>
			<group>
				<function type="method" shared="1">
					<name>SetRelative</name>
					<desc>If set to ''true'' the sound will treat its position as relative to the listener.</desc>
					<lua></lua>
					<overload>
						<parameters>
							<arg type="bool">relative</arg>
						</parameters>
					</overload>
				</function>
				<function type="method" shared="1">
					<name>IsRelative</name>
					<desc>If set to ''true'' the sound will treat its position as relative to the listener.</desc>
					<lua></lua>
					<overload>
						<returnValues>
							<arg type="bool">relative</arg>
						</returnValues>
					</overload>
				</function>
			</group>
			<group>
				<function type="method" shared="1">
					<name>GetDuration</name>
					<desc>Returns the duration of the sound in seconds.</desc>
					<lua></lua>
					<overload>
						<returnValues>
							<arg type="float">duration</arg>
						</returnValues>
					</overload>
				</function>
				<function type="method" shared="1">
					<name>SetReferenceDistance</name>
					<desc>Changes the reference distance of the sound. If the listener is within this distance, the sound will play at full volume.</desc>
					<lua></lua>
					<overload>
						<parameters>
							<arg type="float">referenceDistance</arg>
						</parameters>
					</overload>
				</function>
				<function type="method" shared="1">
					<name>GetReferenceDistance</name>
					<desc>Returns the reference distance of the sound.</desc>
					<lua></lua>
					<overload>
						<returnValues>
							<arg type="float">referenceDistance</arg>
						</returnValues>
					</overload>
				</function>
			</group>
			<group>
				<function type="method" shared="1">
					<name>SetRolloffFactor</name>
					<desc>Changes the sound's rolloff factor.</desc>
					<lua></lua>
					<overload>
						<parameters>
							<arg type="float">rolloffFactor</arg>
						</parameters>
					</overload>
				</function>
				<function type="method" shared="1">
					<name>GetRolloffFactor</name>
					<desc>Returns the sound's rolloff factor.</desc>
					<lua></lua>
					<overload>
						<returnValues>
							<arg type="float">rolloffFactor</arg>
						</returnValues>
					</overload>
				</function>
				<function type="method" shared="1">
					<name>SetRoomRolloffFactor</name>
					<desc></desc>
					<lua></lua>
					<overload>
						<parameters>
							<arg type="float">roomRolloffFactor</arg>
						</parameters>
					</overload>
				</function>
				<function type="method" shared="1">
					<name>GetRoomRolloffFactor</name>
					<desc></desc>
					<lua></lua>
					<overload>
						<returnValues>
							<arg type="float">roomRolloffFactor</arg>
						</returnValues>
					</overload>
				</function>
			</group>
			<group>
				<function type="method" shared="1">
					<name>SetMaxDistance</name>
					<desc></desc>
					<lua></lua>
					<overload>
						<parameters>
							<arg type="float">maxDistance</arg>
						</parameters>
					</overload>
				</function>
				<function type="method" shared="1">
					<name>GetMaxDistance</name>
					<desc></desc>
					<lua></lua>
					<overload>
						<returnValues>
							<arg type="float">maxDistance</arg>
						</returnValues>
					</overload>
				</function>
				<function type="method" shared="1">
					<name>GetMaxAudibleDistance</name>
					<desc>
						Returns the maximum distance at which the sound is audible.\n
						This only returns the correct value if the distance model is set to AL_LINEAR_DISTANCE_CLAMPED. (This is the default behavior).\n
						The distance is calculated with the following formula:\n
						(AL_MAX_DISTANCE -AL_REFERENCE_DISTANCE) *(1.f /AL_ROLLOFF_FACTOR) +AL_REFERENCE_DISTANCE
					</desc>
					<lua></lua>
					<overload>
						<returnValues>
							<arg type="float">maxAudibleDistance</arg>
						</returnValues>
					</overload>
				</function>
				<function type="method" shared="1">
					<name>GetIntensity</name>
					<desc>Returns a float between [0-1] representing the intensity of the sound at the specified position.</desc>
					<lua></lua>
					<overload>
						<parameters>
							<arg type="math.Vector">position</arg>
						</parameters>
						<returnValues>
							<arg type="float">intensity</arg>
						</returnValues>
					</overload>
				</function>
			</group>
			<group>
				<function type="method" shared="1">
					<name>SetMinGain</name>
					<desc>Changes the sound's minimum gain/volume. Default is 0.</desc>
					<lua></lua>
					<overload>
						<parameters>
							<arg type="float">minGain</arg>
						</parameters>
					</overload>
				</function>
				<function type="method" shared="1">
					<name>GetMinGain</name>
					<desc>Returns the sound's minimum gain/volume.</desc>
					<lua></lua>
					<overload>
						<returnValues>
							<arg type="float">minGain</arg>
						</returnValues>
					</overload>
				</function>
				<function type="method" shared="1">
					<name>SetMaxGain</name>
					<desc>Changes the sound's maximum gain/volume. Default is 1.</desc>
					<lua></lua>
					<overload>
						<parameters>
							<arg type="float">maxGain</arg>
						</parameters>
					</overload>
				</function>
				<function type="method" shared="1">
					<name>GetMaxGain</name>
					<desc>Returns the sound's maximum gain/volume.</desc>
					<lua></lua>
					<overload>
						<returnValues>
							<arg type="float">maxGain</arg>
						</returnValues>
					</overload>
				</function>
			</group>
			<group>
				<function type="method" shared="1">
					<name>SetInnerConeAngle</name>
					<desc>Changes the sound's cone inner angle.</desc>
					<lua></lua>
					<overload>
						<parameters>
							<arg type="float">innerConeAngle</arg>
						</parameters>
					</overload>
				</function>
				<function type="method" shared="1">
					<name>GetInnerConeAngle</name>
					<desc>Returns the sound's cone inner angle.</desc>
					<lua></lua>
					<overload>
						<returnValues>
							<arg type="float">innerConeAngle</arg>
						</returnValues>
					</overload>
				</function>
				<function type="method" shared="1">
					<name>SetOuterConeAngle</name>
					<desc>Changes the sound's cone outer angle.</desc>
					<lua></lua>
					<overload>
						<parameters>
							<arg type="float">outerConeAngle</arg>
						</parameters>
					</overload>
				</function>
				<function type="method" shared="1">
					<name>GetOuterConeAngle</name>
					<desc>Returns the sound's cone outer angle.</desc>
					<lua></lua>
					<overload>
						<returnValues>
							<arg type="float">outerConeAngle</arg>
						</returnValues>
					</overload>
				</function>
				<function type="method" shared="1">
					<name>SetOuterConeGain</name>
					<desc>Changes the sound's cone outer gain/volume.</desc>
					<lua></lua>
					<overload>
						<parameters>
							<arg type="float">outerConeGain</arg>
						</parameters>
					</overload>
				</function>
				<function type="method" shared="1">
					<name>GetOuterConeGain</name>
					<desc>Returns the sound's cone outer gain/volume.</desc>
					<lua></lua>
					<overload>
						<returnValues>
							<arg type="float">outerConeGain</arg>
						</returnValues>
					</overload>
				</function>
				<function type="method" shared="1">
					<name>SetOuterConeGainHF</name>
					<desc></desc>
					<lua></lua>
					<overload>
						<parameters>
							<arg type="float">outerConeGainHf</arg>
						</parameters>
					</overload>
				</function>
				<function type="method" shared="1">
					<name>GetOuterConeGainHF</name>
					<desc></desc>
					<lua></lua>
					<overload>
						<returnValues>
							<arg type="float">outerConeGainHf</arg>
						</returnValues>
					</overload>
				</function>
			</group>
			<group>
				<function type="method" shared="1">
					<name>SetType</name>
					<desc>Sets the sound's types.</desc>
					<lua></lua>
					<overload>
						<parameters>
							<arg type="sound.Type">types</arg>
						</parameters>
					</overload>
				</function>
				<function type="method" shared="1">
					<name>GetType</name>
					<desc>Returns the sound's type.</desc>
					<lua></lua>
					<overload>
						<returnValues>
							<arg type="sound.Type">types</arg>
						</returnValues>
					</overload>
				</function>
				<function type="method" shared="1">
					<name>AddType</name>
					<desc>Assigns the sound to the specified category.</desc>
					<lua></lua>
					<overload>
						<parameters>
							<arg type="sound.Type">types</arg>
						</parameters>
					</overload>
				</function>
			</group>
			<function type="method" shared="1">
				<name>CallOnStateChanged</name>
				<desc>
					Adds a callback which is called whenever the sound state changes. The syntax for the callback is:\n
					{{template_overload|{{template_type|Callback}}|Callback|{{template_param|sound.State}} oldState,{{template_param|sound.State}} newState}}
				</desc>
				<lua></lua>
				<overload>
					<parameters>
						<arg type="function">callback</arg>
					</parameters>
					<returnValues>
						<arg type="util.Callback">callbackObject</arg>
					</returnValues>
				</overload>
			</function>
			<group>
				<function type="method" shared="1">
					<name>SetPriority</name>
					<desc>Changes the priority of this sound. Sounds with a higher priority are less likely to be replaced with new sounds if all buffers are in use. A priority of -1 means the sound cannot be replaced, even if paused or not playing.</desc>
					<lua></lua>
					<overload>
						<parameters>
							<arg type="int">priority</arg>
						</parameters>
					</overload>
				</function>
				<function type="method" shared="1">
					<name>GetPriority</name>
					<desc>Returns the priority of this sound.</desc>
					<lua></lua>
					<overload>
						<returnValues>
							<arg type="int">priority</arg>
						</returnValues>
					</overload>
				</function>
			</group>
			<group>
				<function type="method" shared="1">
					<name>FadeIn</name>
					<desc>Fades the sound in over the specified amount of time.</desc>
					<lua></lua>
					<overload>
						<returnValues>
							<arg type="float">fadeTime</arg>
						</returnValues>
					</overload>
				</function>
				<function type="method" shared="1">
					<name>FadeOut</name>
					<desc>Fades the sound out over the specified amount of time.</desc>
					<lua></lua>
					<overload>
						<returnValues>
							<arg type="float">fadeTime</arg>
						</returnValues>
					</overload>
				</function>
			</group>
			<group>
				<function type="method" shared="1">
					<name>GetSource</name>
					<desc>Returns the source entity of the sound.</desc>
					<lua></lua>
					<overload>
						<returnValues>
							<arg type="ents.Entity">entity</arg>
						</returnValues>
					</overload>
				</function>
				<function type="method" shared="1">
					<name>SetSource</name>
					<desc>Changes the source entity of the sound.</desc>
					<lua></lua>
					<overload></overload>
					<overload>
						<parameters>
							<arg type="ents.Entity">entity</arg>
						</parameters>
					</overload>
				</function>
			</group>
			<group>
				<function type="method" shared="1">
					<name>SetRange</name>
					<desc>Changes the play range for the sound.</desc>
					<lua></lua>
					<overload>
						<parameters>
							<arg type="float">min</arg>
							<arg type="float">max</arg>
						</parameters>
					</overload>
				</function>
				<function type="method" shared="1">
					<name>ClearRange</name>
					<desc>Clears the play range for the sound if any was specified.</desc>
					<lua></lua>
					<overload></overload>
				</function>
				<function type="method" shared="1">
					<name>HasRange</name>
					<desc>Returns ''true'' if a range has been specified for the sound.</desc>
					<lua></lua>
					<overload>
						<returnValues>
							<arg type="bool">hasRange</arg>
						</returnValues>
					</overload>
				</function>
				<function type="method" shared="1">
					<name>GetRange</name>
					<desc>Returns the play range for the sound in seconds.</desc>
					<lua></lua>
					<overload>
						<returnValues>
							<arg type="float">min</arg>
							<arg type="float">max</arg>
						</returnValues>
					</overload>
				</function>
				<function type="method" shared="1">
					<name>GetRangeOffsets</name>
					<desc>Returns the play range offsets (Range in [0,1]) for the sound.</desc>
					<lua></lua>
					<overload>
						<returnValues>
							<arg type="float">min</arg>
							<arg type="float">max</arg>
						</returnValues>
					</overload>
				</function>
			</group>
			<group>
				<function type="method" shared="1">
					<name>SetFadeInDuration</name>
					<desc>Changes the sound's fade-in duration.</desc>
					<lua></lua>
					<overload>
						<parameters>
							<arg type="float">fadeDuration</arg>
						</parameters>
					</overload>
				</function>
				<function type="method" shared="1">
					<name>SetFadeOutDuration</name>
					<desc>Changes the sound's fade-out duration.</desc>
					<lua></lua>
					<overload>
						<parameters>
							<arg type="float">fadeDuration</arg>
						</parameters>
					</overload>
				</function>
				<function type="method" shared="1">
					<name>GetFadeInDuration</name>
					<desc>Returns the sound's fade-in duration.</desc>
					<lua></lua>
					<overload>
						<returnValues>
							<arg type="float">fadeDuration</arg>
						</returnValues>
					</overload>
				</function>
				<function type="method" shared="1">
					<name>GetFadeOutDuration</name>
					<desc>Returns the sound's fade-out duration.</desc>
					<lua></lua>
					<overload>
						<returnValues>
							<arg type="float">fadeDuration</arg>
						</returnValues>
					</overload>
				</function>
			</group>
			<group>
				<function type="method" shared="1">
					<name>SetOrientation</name>
					<desc></desc>
					<lua></lua>
					<overload>
						<parameters>
							<arg type="math.Vector">at</arg>
							<arg type="math.Vector">up</arg>
						</parameters>
					</overload>
				</function>
				<function type="method" shared="1">
					<name>GetOrientation</name>
					<desc></desc>
					<lua></lua>
					<overload>
						<returnValues>
							<arg type="math.Vector">at</arg>
							<arg type="math.Vector">up</arg>
						</returnValues>
					</overload>
				</function>
			</group>
			<group>
				<function type="method" shared="1">
					<name>SetLeftStereoAngle</name>
					<desc></desc>
					<lua></lua>
					<overload>
						<parameters>
							<arg type="float">angle</arg>
						</parameters>
					</overload>
				</function>
				<function type="method" shared="1">
					<name>GetLeftStereoAngle</name>
					<desc></desc>
					<lua></lua>
					<overload>
						<returnValues>
							<arg type="float">angle</arg>
						</returnValues>
					</overload>
				</function>
				<function type="method" shared="1">
					<name>SetRightStereoAngle</name>
					<desc></desc>
					<lua></lua>
					<overload>
						<parameters>
							<arg type="float">angle</arg>
						</parameters>
					</overload>
				</function>
				<function type="method" shared="1">
					<name>GetRightStereoAngle</name>
					<desc></desc>
					<lua></lua>
					<overload>
						<returnValues>
							<arg type="float">angle</arg>
						</returnValues>
					</overload>
				</function>
			</group>
			<group>
				<function type="method" shared="1">
					<name>SetAirAbsorptionFactor</name>
					<desc></desc>
					<lua></lua>
					<overload>
						<parameters>
							<arg type="float">factor</arg>
						</parameters>
					</overload>
				</function>
				<function type="method" shared="1">
					<name>GetAirAbsorptionFactor</name>
					<desc></desc>
					<lua></lua>
					<overload>
						<returnValues>
							<arg type="float">factor</arg>
						</returnValues>
					</overload>
				</function>
			</group>
			<group>
				<function type="method" shared="1">
					<name>SetGainAuto</name>
					<desc></desc>
					<lua></lua>
					<overload>
						<parameters>
							<arg type="float">directHf</arg>
							<arg type="float">send</arg>
							<arg type="float">sendHf</arg>
						</parameters>
					</overload>
				</function>
				<function type="method" shared="1">
					<name>GetGainAuto</name>
					<desc>Return order: ''directHF'', ''send'', ''sendHF''.</desc>
					<lua></lua>
					<overload>
						<returnValues>
							<arg type="float">directHf</arg>
							<arg type="float">send</arg>
							<arg type="float">sendHf</arg>
						</returnValues>
					</overload>
				</function>
				<function type="method" shared="1">
					<name>SetDirectFilter</name>
					<desc></desc>
					<lua></lua>
					<overload>
						<parameters>
							<arg type="float">gain</arg>
							<arg type="float">gainHf</arg>
							<arg type="float">gainLf</arg>
						</parameters>
					</overload>
				</function>
				<function type="method" shared="1">
					<name>SetDirectFilter</name>
					<desc></desc>
					<lua></lua>
					<overload>
						<parameters>
							<arg type="float">gain</arg>
						</parameters>
					</overload>
				</function>
				<function type="method" shared="1">
					<name>GetDirectFilter</name>
					<desc>Return order: ''gain'', ''gainHF'', ''gainLF''.</desc>
					<lua></lua>
					<overload>
						<returnValues>
							<arg type="float">gain</arg>
							<arg type="float">gainHF</arg>
							<arg type="float">gainLF</arg>
						</returnValues>
					</overload>
				</function>
			</group>
			<group>
				<function type="method" shared="1">
					<name>AddEffect</name>
					<desc></desc>
					<lua></lua>
					<overload>
						<parameters>
							<arg type="string">name</arg>
							<arg type="float">gain</arg>
							<arg type="float">gainHf</arg>
							<arg type="float">gainLf</arg>
						</parameters>
						<returnValues>
							<arg type="bool">success</arg>
						</returnValues>
					</overload>
					<overload>
						<parameters>
							<arg type="string">name</arg>
							<arg type="float">gain</arg>
						</parameters>
						<returnValues>
							<arg type="bool">success</arg>
						</returnValues>
					</overload>
				</function>
				<function type="method" shared="1">
					<name>RemoveEffect</name>
					<desc></desc>
					<lua></lua>
					<overload>
						<parameters>
							<arg type="string">name</arg>
						</parameters>
					</overload>
				</function>
				<function type="method" shared="1">
					<name>SetEffectParameters</name>
					<desc></desc>
					<lua></lua>
					<overload>
						<parameters>
							<arg type="string">name</arg>
							<arg type="float">gain</arg>
							<arg type="float">gainHf</arg>
							<arg type="float">gainLf</arg>
						</parameters>
					</overload>
					<overload>
						<parameters>
							<arg type="string">name</arg>
							<arg type="float">gain</arg>
						</parameters>
					</overload>
				</function>
			</group>
			<group>
				<function type="method" shared="1">
					<name>SetGainRange</name>
					<desc></desc>
					<lua></lua>
					<overload>
						<parameters>
							<arg type="float">minGain</arg>
							<arg type="float">maxGain</arg>
						</parameters>
					</overload>
				</function>
				<function type="method" shared="1">
					<name>GetGainRange</name>
					<desc>Return order: ''minGain'', ''maxGain''.</desc>
					<lua></lua>
					<overload>
						<returnValues>
							<arg type="float">minGain</arg>
							<arg type="float">maxGain</arg>
						</returnValues>
					</overload>
				</function>
				<function type="method" shared="1">
					<name>SetDistanceRange</name>
					<desc></desc>
					<lua></lua>
					<overload>
						<parameters>
							<arg type="float">refDist</arg>
							<arg type="float">maxDist</arg>
						</parameters>
					</overload>
				</function>
				<function type="method" shared="1">
					<name>GetDistanceRange</name>
					<desc>Return order: ''refDist'', ''maxDist''.</desc>
					<lua></lua>
					<overload>
						<returnValues>
							<arg type="float">refDist</arg>
							<arg type="float">maxDist</arg>
						</returnValues>
					</overload>
				</function>
			</group>
			<group>
				<function type="method" shared="1">
					<name>SetConeAngles</name>
					<desc></desc>
					<lua></lua>
					<overload>
						<parameters>
							<arg type="float">innerAngle</arg>
							<arg type="float">outerAngle</arg>
						</parameters>
					</overload>
				</function>
				<function type="method" shared="1">
					<name>GetConeAngles</name>
					<desc>Return order: ''inner'', ''outer''.</desc>
					<lua></lua>
					<overload>
						<returnValues>
							<arg type="float">innerAngle</arg>
							<arg type="float">outerAngle</arg>
						</returnValues>
					</overload>
				</function>
				<function type="method" shared="1">
					<name>SetOuterConeGains</name>
					<desc></desc>
					<lua></lua>
					<overload>
						<parameters>
							<arg type="float">gain</arg>
							<arg type="float">gainHf</arg>
						</parameters>
					</overload>
				</function>
				<function type="method" shared="1">
					<name>GetOuterConeGains</name>
					<desc>Return order: ''gain'', ''gainHf''.</desc>
					<lua></lua>
					<overload>
						<returnValues>
							<arg type="float">gain</arg>
							<arg type="float">gainHf</arg>
						</returnValues>
					</overload>
				</function>
			</group>
			<group>
				<function type="method" shared="1">
					<name>SetStereoAngles</name>
					<desc></desc>
					<lua></lua>
					<overload>
						<parameters>
							<arg type="float">leftAngle</arg>
							<arg type="float">rightAngle</arg>
						</parameters>
					</overload>
				</function>
				<function type="method" shared="1">
					<name>GetStereoAngles</name>
					<desc>Return order: ''leftAng'', ''rightAng''.</desc>
					<lua></lua>
					<overload>
						<returnValues>
							<arg type="float">leftAng</arg>
							<arg type="float">rightAng</arg>
						</returnValues>
					</overload>
				</function>
			</group>
			<group>
				<function type="method" shared="1">
					<name>GetDirectGainHFAuto</name>
					<desc></desc>
					<lua></lua>
					<overload>
						<returnValues>
							<arg type="bool">directionGainHfAuto</arg>
						</returnValues>
					</overload>
				</function>
				<function type="method" shared="1">
					<name>GetSendGainAuto</name>
					<desc></desc>
					<lua></lua>
					<overload>
						<returnValues>
							<arg type="bool">sendGainAuto</arg>
						</returnValues>
					</overload>
				</function>
				<function type="method" shared="1">
					<name>GetSendGainHFAuto</name>
					<desc></desc>
					<lua></lua>
					<overload>
						<returnValues>
							<arg type="bool">sendGainHfAuto</arg>
						</returnValues>
					</overload>
				</function>
				<function type="method" shared="1">
					<name>SetEffectGain</name>
					<desc></desc>
					<lua></lua>
					<overload>
						<parameters>
							<arg type="string">effectName</arg>
							<arg type="float">gain</arg>
						</parameters>
					</overload>
				</function>
			</group>
			<function type="method" shared="1">
				<name>GetRolloffFactors</name>
				<desc>Return order: ''rolloff'', ''room factor''.</desc>
				<lua></lua>
				<overload>
					<returnValues>
						<arg type="string">rolloff</arg>
						<arg type="float">roomFactor</arg>
					</returnValues>
				</overload>
			</function>
			<function type="method" shared="1">
				<name>SetRolloffFactors</name>
				<desc></desc>
				<lua></lua>
				<overload>
					<parameters>
						<arg type="string">factor</arg>
						<arg type="float">roomFactor</arg>
					</parameters>
				</overload>
			</function>
			<!-- clientside -->
			<function type="method" client="1">
				<name>GetBuffer</name>
				<desc>Returns the buffer associated with the sound.</desc>
				<lua></lua>
				<overload>
					<returnValues>
						<arg type="sound.Buffer">buffer</arg>
					</returnValues>
				</overload>
			</function>
			<function type="method" client="1">
				<name>GetWorldPos</name>
				<desc>Returns the position of the sound in the world. If the sound isn't relative to the listener, this has the same effect as ALSound:GetPos.</desc>
				<lua></lua>
				<overload>
					<returnValues>
						<arg type="math.Vector">worldPos</arg>
					</returnValues>
				</overload>
			</function>
			<function type="method" client="1">
				<name>GetFrameLength</name>
				<desc></desc>
				<lua></lua>
				<overload>
					<returnValues>
						<arg type="int">length</arg>
					</returnValues>
				</overload>
			</function>
			<group>
				<function type="method" client="1">
					<name>SetFrameOffset</name>
					<desc></desc>
					<lua></lua>
					<overload>
						<parameters>
							<arg type="int">offset</arg>
						</parameters>
					</overload>
				</function>
				<function type="method" client="1">
					<name>GetFrameOffset</name>
					<desc></desc>
					<lua></lua>
					<overload>
						<returnValues>
							<arg type="int">offset</arg>
						</returnValues>
					</overload>
				</function>
			</group>
			<function type="method" client="1">
				<name>GetInverseFrequency</name>
				<desc></desc>
				<lua></lua>
				<overload>
					<returnValues>
						<arg type="int">inverseFrequency</arg>
					</returnValues>
				</overload>
			</function>
			<function type="method" client="1">
				<name>GetChannelConfigName</name>
				<desc></desc>
				<lua></lua>
				<overload>
					<returnValues>
						<arg type="string">configName</arg>
					</returnValues>
				</overload>
			</function>
			<function type="method" client="1">
				<name>GetSampleTypeName</name>
				<desc></desc>
				<lua></lua>
				<overload>
					<returnValues>
						<arg type="string">sampleTypeName</arg>
					</returnValues>
				</overload>
			</function>
			<group>
				<function type="method" client="1">
					<name>IsMono</name>
					<desc></desc>
					<lua></lua>
					<overload>
						<returnValues>
							<arg type="bool">mono</arg>
						</returnValues>
					</overload>
				</function>
				<function type="method" client="1">
					<name>IsStereo</name>
					<desc></desc>
					<lua></lua>
					<overload>
						<returnValues>
							<arg type="bool">stereo</arg>
						</returnValues>
					</overload>
				</function>
			</group>
			<function type="method" client="1">
				<name>GetFrequency</name>
				<desc></desc>
				<lua></lua>
				<overload>
					<returnValues>
						<arg type="int">frequency</arg>
					</returnValues>
				</overload>
			</function>
			<function type="method" client="1">
				<name>GetChannelConfig</name>
				<desc></desc>
				<lua></lua>
				<overload>
					<returnValues>
						<arg type="sound.ChannelConfig">channelConfig</arg>
					</returnValues>
				</overload>
			</function>
			<function type="method" client="1">
				<name>GetSampleType</name>
				<desc></desc>
				<lua></lua>
				<overload>
					<returnValues>
						<arg type="sound.SampleType">sampleType</arg>
					</returnValues>
				</overload>
			</function>
			<function type="method" client="1">
				<name>GetLength</name>
				<desc></desc>
				<lua></lua>
				<overload>
					<returnValues>
						<arg type="int">length</arg>
					</returnValues>
				</overload>
			</function>
			<group>
				<function type="method" client="1">
					<name>GetLoopFramePoints</name>
					<desc>Return order: ''start'', ''end''.</desc>
					<lua></lua>
					<overload>
						<returnValues>
							<arg type="int">loopPointStart</arg>
							<arg type="int">loopPointEnd</arg>
						</returnValues>
					</overload>
				</function>
				<function type="method" client="1">
					<name>GetLoopTimePoints</name>
					<desc>Return order: ''startTime'', ''endTime''.</desc>
					<lua></lua>
					<overload>
						<returnValues>
							<arg type="int">loopPointStart</arg>
							<arg type="int">loopPointEnd</arg>
						</returnValues>
					</overload>
				</function>
			</group>
			<group>
				<function type="method" client="1">
					<name>SetPropagationIdentifier</name>
					<desc></desc>
					<lua></lua>
					<overload>
						<parameters>
							<arg type="string">identifier</arg>
						</parameters>
					</overload>
				</function>
				<function type="method" client="1">
					<name>GetPropagationIdentifier</name>
					<desc></desc>
					<lua></lua>
					<overload>
						<returnValues>
							<arg type="string">identifier</arg>
						</returnValues>
					</overload>
				</function>
			</group>
			<!-- clientside -->
		</collection>
	</collection>
</root>
