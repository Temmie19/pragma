<root>
	<collection type="library">
		<name>game</name>
		<collection type="class">
			<name>Model</name>
			<collection type="class">
				<name>Joint</name>
				<desc>TODO</desc>
				<group>
					<function type="method" shared="1">
						<name>GetType</name>
						<desc>Returns the joint's type.</desc>
						<lua></lua>
						<overload>
							<returnValues>
								<arg type="game.Model.Joint.Type">type</arg>
							</returnValues>
						</overload>
					</function>
					<function type="method" shared="1">
						<name>SetType</name>
						<desc>Changes the joint's type.</desc>
						<lua></lua>
						<overload>
							<parameters>
								<arg type="game.Model.Joint.Type">type</arg>
							</parameters>
						</overload>
					</function>
				</group>
				<group>
					<function type="method" shared="1">
						<name>GetCollisionMeshId</name>
						<desc>Returns the id of the collision mesh this joint belongs to.</desc>
						<lua></lua>
						<overload>
							<returnValues>
								<arg type="int">collisionMeshId</arg>
							</returnValues>
						</overload>
					</function>
					<function type="method" shared="1">
						<name>SetCollisionMeshId</name>
						<desc>Changes the id of the collision mesh this joint belongs to.</desc>
						<lua></lua>
						<overload>
							<parameters>
								<arg type="int">collisionMeshId</arg>
							</parameters>
						</overload>
					</function>
				</group>
				<group>
					<function type="method" shared="1">
						<name>GetParentCollisionMeshId</name>
						<desc>Returns the id of the parent of the collision mesh this joint belongs to.</desc>
						<lua></lua>
						<overload>
							<returnValues>
								<arg type="int">collisionMeshId</arg>
							</returnValues>
						</overload>
					</function>
					<function type="method" shared="1">
						<name>SetParentCollisionMeshId</name>
						<desc>Changes the id of the parent of the collision mesh this joint belongs to.</desc>
						<lua></lua>
						<overload>
							<parameters>
								<arg type="int">collisionMeshId</arg>
							</parameters>
						</overload>
					</function>
				</group>
				<group>
					<function type="method" shared="1">
						<name>GetCollisionsEnabled</name>
						<desc>Returns ''true'' if self-collisions are enabled for this joint.</desc>
						<lua></lua>
						<overload>
							<returnValues>
								<arg type="bool">collisionsEnabled</arg>
							</returnValues>
						</overload>
					</function>
					<function type="method" shared="1">
						<name>SetCollisionsEnabled</name>
						<desc>Changes whether self-collisions are enabled for this joint.</desc>
						<lua></lua>
						<overload>
							<parameters>
								<arg type="bool">collisionsEnabled</arg>
							</parameters>
						</overload>
					</function>
				</group>
				<group>
					<function type="method" shared="1">
						<name>GetKeyValues</name>
						<desc>Returns the keyvalues associated with this joint.</desc>
						<lua></lua>
						<overload>
							<returnValues>
								<arg type="table" subType="string">keyValues</arg>
							</returnValues>
						</overload>
					</function>
					<function type="method" shared="1">
						<name>SetKeyValues</name>
						<desc>Changes the keyvalues associated with this joint.</desc>
						<lua></lua>
						<overload>
							<parameters>
								<arg type="table" subType="string">keyValues</arg>
							</parameters>
						</overload>
					</function>
					<function type="method" shared="1">
						<name>SetKeyValue</name>
						<desc>Changes a keyvalue associated with this joint.</desc>
						<lua></lua>
						<overload>
							<parameters>
								<arg type="string">key</arg>
								<arg type="string">value</arg>
							</parameters>
						</overload>
					</function>
					<function type="method" shared="1">
						<name>RemoveKeyValue</name>
						<desc>Removes the specified keyvalue from this joint.</desc>
						<lua></lua>
						<overload>
							<parameters>
								<arg type="string">key</arg>
							</parameters>
						</overload>
					</function>
				</group>
				<enum_set type="flags">
					<name>Type</name>
					<enum value="0">TYPE_NONE</enum>
					<enum value="1">TYPE_FIXED</enum>
					<enum value="2">TYPE_BALLSOCKET</enum>
					<enum value="3">TYPE_HINGE</enum>
					<enum value="4">TYPE_SLIDER</enum>
					<enum value="5">TYPE_CONETWIST</enum>
					<enum value="6">TYPE_DOF</enum>
				</enum_set>
			</collection>
		</collection>
	</collection>
</root>
