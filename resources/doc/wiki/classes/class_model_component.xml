<root>
	<collection type="library">
		<name>ents</name>
		<collection type="class">
			<name>ModelComponent</name>
			<derivedFrom>ents.EntityComponent</derivedFrom>
			<desc>TODO</desc>
			<group>
				<function type="method" shared="1">
					<name>SetModel</name>
					<desc>Changes the entity's model.</desc>
					<lua></lua>
					<overload></overload>
					<overload>
						<parameters>
							<arg type="string">modelName</arg>
						</parameters>
					</overload>
					<overload>
						<parameters>
							<arg type="game.Model">model</arg>
						</parameters>
					</overload>
				</function>
				<function type="method" shared="1">
					<name>GetModel</name>
					<desc>Returns the entity's model.</desc>
					<lua></lua>
					<overload>
						<returnValues>
							<arg type="game.Model">model</arg>
						</returnValues>
					</overload>
				</function>
				<function type="method" shared="1">
					<name>GetModelName</name>
					<desc>Returns the name of the entity's model.</desc>
					<lua></lua>
					<overload>
						<returnValues>
							<arg type="string">modelName</arg>
						</returnValues>
					</overload>
				</function>
			</group>
			<group>
				<function type="method" shared="1">
					<name>SetSkin</name>
					<desc>Changes the entity's skin. If the specified skin doesn't exist, it will revert to the first skin.</desc>
					<lua></lua>
					<overload>
						<parameters>
							<arg type="int">skin</arg>
						</parameters>
					</overload>
				</function>
				<function type="method" shared="1">
					<name>GetSkin</name>
					<desc>Returns the entity's current skin.</desc>
					<lua></lua>
					<overload>
						<returnValues>
							<arg type="int">skin</arg>
						</returnValues>
					</overload>
				</function>
				<function type="method" shared="1">
					<name>GetSkinProperty</name>
					<desc>Returns the skin property.</desc>
					<lua></lua>
					<overload>
						<returnValues>
							<arg type="util.IntProperty">skinProperty</arg>
						</returnValues>
					</overload>
				</function>
				<function type="method" shared="1">
					<name>SetRandomSkin</name>
					<desc>Randomly applies one of the entity's available skins.</desc>
					<lua></lua>
					<overload></overload>
				</function>
			</group>
			<group>
				<function type="method" shared="1">
					<name>GetBodyGroup</name>
					<desc>Returns the value associated with the specified body group.</desc>
					<lua></lua>
					<overload>
						<parameters>
							<arg type="int">groupId</arg>
						</parameters>
						<returnValues>
							<arg type="int">partId</arg>
						</returnValues>
					</overload>
				</function>
				<function type="method" shared="1">
					<name>SetBodyGroup</name>
					<desc>Changes the value associated with the specified body group.</desc>
					<lua></lua>
					<overload>
						<parameters>
							<arg type="int">groupId</arg>
							<arg type="int">partId</arg>
						</parameters>
					</overload>
				</function>
			</group>
			<group>
				<function type="method" shared="1">
					<name>LookupAnimation</name>
					<desc>Returns the animation id for the specified animation, or -1 if the entity doesn't have the animation.</desc>
					<lua></lua>
					<overload>
						<parameters>
							<arg type="string">animName</arg>
						</parameters>
						<returnValues>
							<arg type="int">animId</arg>
						</returnValues>
					</overload>
				</function>
				<function type="method" shared="1">
					<name>LookupBlendController</name>
					<desc>Returns the controller ID for the specified controller, or -1 if the controller doesn't exist.</desc>
					<lua></lua>
					<overload>
						<parameters>
							<arg type="string">controllerName</arg>
						</parameters>
						<returnValues>
							<arg type="int">controllerId</arg>
						</returnValues>
					</overload>
				</function>
				<function type="method" shared="1">
					<name>LookupAttachment</name>
					<desc>Returns the attachment ID for the specified attachment, or -1 if the attachment doesn't exist.</desc>
					<lua></lua>
					<overload>
						<parameters>
							<arg type="string">attachmentName</arg>
						</parameters>
						<returnValues>
							<arg type="int">attachmentId</arg>
						</returnValues>
					</overload>
				</function>
				<function type="method" shared="1">
					<name>LookupBone</name>
					<desc>Returns the entity's bone id associated with the specified bone name, or -1 if the entity doesn't have that bone.</desc>
					<lua></lua>
					<overload>
						<parameters>
							<arg type="string">boneName</arg>
						</parameters>
						<returnValues>
							<arg type="int">boneId</arg>
						</returnValues>
					</overload>
				</function>
			</group>
			<group>
				<function type="method" shared="1">
					<name>GetHitboxCount</name>
					<desc>Returns the number of hitboxes for this entity.</desc>
					<lua></lua>
					<overload>
						<returnValues>
							<arg type="int">hitboxCount</arg>
						</returnValues>
					</overload>
				</function>
				<function type="method" shared="1">
					<name>GetHitboxBounds</name>
					<desc>Returns the min and max bounds of the hitbox, as well as the origin and rotation of the bone in world space.</desc>
					<lua></lua>
					<overload>
						<parameters>
							<arg type="int">boneId</arg>
						</parameters>
						<returnValues>
							<arg type="math.Vector">min</arg>
							<arg type="math.Vector">max</arg>
							<arg type="math.Vector">origin</arg>
							<arg type="math.Quaternion">rotation</arg>
						</returnValues>
					</overload>
				</function>
			</group>
			<enum_set>
				<name>Event</name>
				<enum>EVENT_ON_MODEL_CHANGED</enum>
				<enum>EVENT_ON_MODEL_MATERIALS_LOADED</enum>
			</enum_set>
		</collection>
	</collection>
</root>
