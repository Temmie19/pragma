<root>
	<collection type="library">
		<name>game</name>
		<collection type="class">
			<name>DamageInfo</name>
			<desc>TODO</desc>
			<function type="method" shared="1">
				<name>constructor</name>
				<desc>Creates a new DamageInfo object.</desc>
				<lua></lua>
				<overload>
					<returnValues>
						<arg type="game.DamageInfo">damageInfo</arg>
					</returnValues>
				</overload>
			</function>
			<group>
				<function type="method" shared="1">
					<name>SetDamage</name>
					<desc>Specifies the damage.</desc>
					<lua></lua>
					<overload>
						<parameters>
							<arg type="int">damage</arg>
						</parameters>
					</overload>
				</function>
				<function type="method" shared="1">
					<name>AddDamage</name>
					<desc>Adds the specified damage.</desc>
					<lua></lua>
					<overload>
						<parameters>
							<arg type="int">damage</arg>
						</parameters>
					</overload>
				</function>
				<function type="method" shared="1">
					<name>ScaleDamage</name>
					<desc>Scales the damage.</desc>
					<lua></lua>
					<overload>
						<parameters>
							<arg type="float">scale</arg>
						</parameters>
					</overload>
				</function>
				<function type="method" shared="1">
					<name>GetDamage</name>
					<desc>Returns the damage.</desc>
					<lua></lua>
					<overload>
						<returnValues>
							<arg type="float">damage</arg>
						</returnValues>
					</overload>
				</function>
			</group>
			<group>
				<function type="method" shared="1">
					<name>GetAttacker</name>
					<desc>Returns the attacker.</desc>
					<lua></lua>
					<overload>
						<returnValues>
							<arg type="ents.Entity">attacker</arg>
						</returnValues>
					</overload>
				</function>
				<function type="method" shared="1">
					<name>SetAttacker</name>
					<desc>Changes the attacker.</desc>
					<lua></lua>
					<overload>
						<parameters>
							<arg type="ents.Entity">attacker</arg>
						</parameters>
					</overload>
				</function>
				<function type="method" shared="1">
					<name>GetInflictor</name>
					<desc>Returns the inflictor.</desc>
					<lua></lua>
					<overload>
						<returnValues>
							<arg type="ents.Entity">inflictor</arg>
						</returnValues>
					</overload>
				</function>
				<function type="method" shared="1">
					<name>SetInflictor</name>
					<desc>Changes the inflictor.</desc>
					<lua></lua>
					<overload>
						<parameters>
							<arg type="ents.Entity">inflictor</arg>
						</parameters>
					</overload>
				</function>
			</group>
			<group>
				<function type="method" shared="1">
					<name>GetDamageTypes</name>
					<desc>Returns the damage types.</desc>
					<lua></lua>
					<overload>
						<returnValues>
							<arg type="game.DamageType">damageTypes</arg>
						</returnValues>
					</overload>
				</function>
				<function type="method" shared="1">
					<name>SetDamageType</name>
					<desc>Changes the damage types.</desc>
					<lua></lua>
					<overload>
						<parameters>
							<arg type="game.DamageType">damageTypes</arg>
						</parameters>
					</overload>
				</function>
				<function type="method" shared="1">
					<name>AddDamageType</name>
					<desc>Adds damage types.</desc>
					<lua></lua>
					<overload>
						<parameters>
							<arg type="game.DamageType">damageTypes</arg>
						</parameters>
					</overload>
				</function>
				<function type="method" shared="1">
					<name>RemoveDamageType</name>
					<desc>Removes damage types.</desc>
					<lua></lua>
					<overload>
						<parameters>
							<arg type="game.DamageType">damageTypes</arg>
						</parameters>
					</overload>
				</function>
				<function type="method" shared="1">
					<name>IsDamageType</name>
					<desc>Returns ''true'' if the specified damage type is set.</desc>
					<lua></lua>
					<overload>
						<parameters>
							<arg type="game.DamageType">damageTypes</arg>
						</parameters>
						<returnValues>
							<arg type="bool">isSet</arg>
						</returnValues>
					</overload>
				</function>
			</group>
			<group>
				<function type="method" shared="1">
					<name>SetSource</name>
					<desc>Changes the damage origin.</desc>
					<lua></lua>
					<overload>
						<parameters>
							<arg type="math.Vector">damageOrigin</arg>
						</parameters>
					</overload>
				</function>
				<function type="method" shared="1">
					<name>GetSource</name>
					<desc>Returns the damage origin.</desc>
					<lua></lua>
					<overload>
						<returnValues>
							<arg type="math.Vector">damageOrigin</arg>
						</returnValues>
					</overload>
				</function>
				<function type="method" shared="1">
					<name>SetHitPosition</name>
					<desc>Changes the damage hit position.</desc>
					<lua></lua>
					<overload>
						<parameters>
							<arg type="math.Vector">damageHitPosition</arg>
						</parameters>
					</overload>
				</function>
				<function type="method" shared="1">
					<name>GetHitPosition</name>
					<desc>Returns the damage hit position.</desc>
					<lua></lua>
					<overload>
						<returnValues>
							<arg type="math.Vector">damageHitPosition</arg>
						</returnValues>
					</overload>
				</function>
			</group>
			<group>
				<function type="method" shared="1">
					<name>SetForce</name>
					<desc>Changes the damage force.</desc>
					<lua></lua>
					<overload>
						<parameters>
							<arg type="math.Vector">damageForce</arg>
						</parameters>
					</overload>
				</function>
				<function type="method" shared="1">
					<name>GetForce</name>
					<desc>Returns the damage force.</desc>
					<lua></lua>
					<overload>
						<returnValues>
							<arg type="math.Vector">damageForce</arg>
						</returnValues>
					</overload>
				</function>
			</group>
			<group>
				<function type="method" shared="1">
					<name>SetHitGroup</name>
					<desc>Changes the hitgroup.</desc>
					<lua></lua>
					<overload>
						<parameters>
							<arg type="game.HitGroup">hitGroup</arg>
						</parameters>
					</overload>
				</function>
				<function type="method" shared="1">
					<name>GetHitGroup</name>
					<desc>Returns the hitgroup.</desc>
					<lua></lua>
					<overload>
						<returnValues>
							<arg type="game.HitGroup">hitGroup</arg>
						</returnValues>
					</overload>
				</function>
			</group>
		</collection>
	</collection>
</root>
