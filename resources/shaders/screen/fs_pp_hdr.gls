#version 400

#extension GL_ARB_separate_shader_objects : enable
#extension GL_ARB_shading_language_420pack : enable

layout(location = 0) in vec2 vs_vert_uv;

layout(set = 0,binding = 0) uniform sampler2D u_texture;
layout(set = 0,binding = 1) uniform sampler2D u_bloom;
layout(set = 0,binding = 2) uniform sampler2D u_glow;

layout(push_constant) uniform RenderSettings {
	float exposure;
	float bloomScale;
	float glowScale;
	uint toneMapping;
} u_renderSettings;

layout(location = 0) out vec4 fs_color;

#include "/modules/fs_tonemapping.gls"

void main()
{
	vec4 col = texture(u_texture,vs_vert_uv);
	vec3 colBloom = texture(u_bloom,vs_vert_uv).rgb;
	col.rgb += colBloom *u_renderSettings.bloomScale;

	vec3 colGlow = texture(u_glow,vs_vert_uv).rgb;
	col.rgb += colGlow *u_renderSettings.glowScale;
	
	fs_color = vec4(apply_tone_mapping(col.rgb,u_renderSettings.toneMapping,u_renderSettings.exposure),col.a);
	fs_color.a = dot(fs_color.rgb,vec3(0.299,0.587,0.114)); // Compute luma (required for fxaa)
}
