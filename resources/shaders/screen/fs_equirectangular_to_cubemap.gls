#version 400

#extension GL_ARB_separate_shader_objects : enable
#extension GL_ARB_shading_language_420pack : enable

struct VertexData
{
	vec3 localPos;
};
layout(location = 0) in VertexData fs_in;

layout(set = 0,binding = 0) uniform sampler2D u_equirectangularTexture;

layout(location = 0) out vec4 fs_color;

// Source: https://learnopengl.com
const vec2 invAtan = vec2(0.1591,0.3183);
vec2 sample_spherical_map(vec3 v)
{
	vec2 uv = vec2(atan(v.z,v.x),asin(v.y));
	uv *= invAtan;
	uv += 0.5;
	return vec2(uv.x,1.0 -uv.y);
}

void main()
{
	vec2 uv = sample_spherical_map(normalize(fs_in.localPos));
	vec3 color = texture(u_equirectangularTexture,uv).rgb;

	fs_color = vec4(color,1.0);
}
