#version 430

#define SHADER_UNIFORM_TEXTURE_SET 0
#define SHADER_STORAGE_COLOR_SET 1

layout(local_size_x = 1,local_size_y = 1,local_size_z = 1) in;

layout(set = SHADER_UNIFORM_TEXTURE_SET,binding = 0) uniform sampler2D u_texture;

layout(push_constant) uniform Settings {
	int sampleCount;
} u_settings;

layout(set = SHADER_STORAGE_COLOR_SET,binding = 0) buffer AverageColor {
	vec4 color;
} out_averageColor;

void main(void)
{
	int nSamples = max(int(sqrt(float(u_settings.sampleCount))),1);
	float inc = 1.0 /float(nSamples +1);
	float offset = inc;
	vec4 color = vec4(0.0,0.0,0.0,0.0);
	for(int ySample=0;ySample<nSamples;++ySample)
	{
		float y = offset +inc *ySample;
		for(int xSample=0;xSample<nSamples;++xSample)
		{
			float x = offset +inc *xSample;
			color += texture(u_texture,vec2(x,y));
		}
	}
	color /= pow(nSamples,2);
	out_averageColor.color = color;
}