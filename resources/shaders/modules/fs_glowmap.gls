#ifndef F_FS_GLOWMAP_GLS
#define F_FS_GLOWMAP_GLS

#include "sh_mapping.gls"

#ifndef USE_GLOW_MAP
	#define USE_GLOW_MAP 1
#endif
#if USE_GLOW_MAP == 1
	layout(set = SHADER_UNIFORM_GLOW_MAP_SET,binding = SHADER_UNIFORM_GLOW_MAP_BINDING) uniform sampler2D u_glowMap;
	vec4 get_glow_map_color() {return texture(u_glowMap,fs_in.vert_uv).rgba;}
#endif

vec4 add_glow_map_color(vec4 col,vec2 texCoords)
{
#if USE_GLOW_MAP == 1
	if(use_glow_map())
	{
		vec4 texGlow = texture(u_glowMap,texCoords);
		vec3 colGlow = texGlow.rgb *texGlow.a *get_glow_scale();
		if((u_material.flags &FMAT_GLOW_MODE_1) != 0)
		{
			for(int i=0;i<3;i++)
			{
				float scale = colGlow[i] /1.0;
				col[i] = col[i] *(1.0 -scale) +colGlow[i] *scale;
			}
		}
		else if((u_material.flags &FMAT_GLOW_MODE_2) != 0)
		{
			for(int i=0;i<3;i++)
				col[i] += max(colGlow[i] -col[i],0.0);
		}
		else
			col.rgb += colGlow;
	}
#endif
	return col;
}

#endif
