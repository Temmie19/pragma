#ifndef F_SH_MATERIAL_GLS
#define F_SH_MATERIAL_GLS

#define FMAT_DIFFUSE 0 // Diffuse is always enabled
#define FMAT_NORMAL 1
#define FMAT_SPECULAR (FMAT_NORMAL<<1)
#define FMAT_SPECULAR_MAP (FMAT_SPECULAR<<1)
#define FMAT_PARALLAX (FMAT_SPECULAR_MAP<<1)
#define FMAT_GLOW (FMAT_PARALLAX<<1)
#define FMAT_TRANSLUCENT (FMAT_GLOW<<1)
#define FMAT_DIFFUSE_SPECULAR (FMAT_TRANSLUCENT<<1)
#define FMAT_NORMAL_SPECULAR (FMAT_DIFFUSE_SPECULAR<<1)
#define FMAT_BLACK_TO_ALPHA (FMAT_NORMAL_SPECULAR<<1)

#define FMAT_GLOW_MODE_1 (FMAT_BLACK_TO_ALPHA<<1)
#define FMAT_GLOW_MODE_2 (FMAT_GLOW_MODE_1<<1)
#define FMAT_GLOW_MODE_3 (FMAT_GLOW_MODE_2<<1)
#define FMAT_GLOW_MODE_4 (FMAT_GLOW_MODE_3<<1)
#define FMAT_GLOW_MODE (FMAT_GLOW_MODE_1 | FMAT_GLOW_MODE_2 | FMAT_GLOW_MODE_3 | FMAT_GLOW_MODE_4)

#define FMAT_DIFFUSE_SRGB (FMAT_GLOW_MODE_4<<1)
#define FMAT_GLOW_SRGB (FMAT_DIFFUSE_SRGB<<1)

layout(std140,set = SHADER_UNIFORM_MATERIAL_SET,binding = SHADER_UNIFORM_MATERIAL_BINDING) uniform Material
{
	vec4 phong; // rgb = Phong Color, a = Phong intensity
	uint flags;
	float glowScale;
	float parallaxHeightScale;
	float alphaDiscardThreshold;
	float phongIntensity;
	float metalnessFactor;
} u_material;

bool use_normal_map() {return ((u_material.flags &FMAT_NORMAL) != 0) ? true : false;}
bool use_specular_map() {return ((u_material.flags &FMAT_SPECULAR_MAP) != 0) ? true : false;}
bool use_specular_from_diffuse_alpha() {return ((u_material.flags &FMAT_DIFFUSE_SPECULAR) != 0) ? true : false;}
bool use_specular_from_normal_alpha() {return ((u_material.flags &FMAT_NORMAL_SPECULAR) != 0) ? true : false;}
bool use_parallax_map() {return ((u_material.flags &FMAT_PARALLAX) != 0) ? true : false;}
bool use_glow_map() {return ((u_material.flags &FMAT_GLOW_MODE) != 0) ? true : false;}
float get_glow_scale() {return u_material.glowScale;}
bool is_material_translucent() {return ((u_material.flags &FMAT_TRANSLUCENT) != 0) ? true : false;}
bool is_diffuse_srgb() {return ((u_material.flags &FMAT_DIFFUSE_SRGB) != 0) ? true : false;}
bool is_glow_srgb() {return ((u_material.flags &FMAT_GLOW_SRGB) != 0) ? true : false;}

#endif
